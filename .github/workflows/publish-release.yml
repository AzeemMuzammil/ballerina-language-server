name: Publish release

on:
  workflow_dispatch:

jobs:
  publish-release:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21.0.3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Set Up Ballerina
        uses: ballerina-platform/setup-ballerina@v1.1.1
        with:
          version: 2201.12.3

      - name: Cache Ballerina dependencies
        uses: actions/cache@v4
        id: cache-ballerina
        with:
          path: /home/runner/.ballerina/repositories/
          key: ${{ runner.os }}-ballerina-${{ hashFiles('**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-ballerina-

      - name: Set version env variable
        run: echo VERSION=$((grep -w "version" | cut -d= -f2) < gradle.properties | cut -d- -f1) >> $GITHUB_ENV

      - name: Pre release depenency version update
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          echo "Version: ${VERSION}"
          git config user.name ${{ secrets.BALLERINA_BOT_USERNAME }}
          git config user.email ${{ secrets.BALLERINA_BOT_EMAIL }}
          git checkout -b release-${VERSION}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Release and publish artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_ACCESS_TOKEN }}
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          ./gradlew release -Prelease.useAutomaticVersion=true -x test
          ./gradlew -Pversion=${VERSION} publish -x test

      - name: Create Github release from the release tag
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          curl --request POST 'https://api.github.com/repos/ballerina-platform/ballerina-language-server/releases' \
          --header 'Accept: application/vnd.github.v3+json' \
          --header 'Authorization: Bearer ${{ secrets.BALLERINA_BOT_TOKEN }}' \
          --header 'Content-Type: application/json' \
          --data-raw '{
              "tag_name": "v'"$VERSION"'",
              "name": "ballerina-language-server-v'"$VERSION"'"
          }'

      - name: Post release PR
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
          bin/hub pull-request --base main -m "[Automated] Sync main after "$VERSION" release"
