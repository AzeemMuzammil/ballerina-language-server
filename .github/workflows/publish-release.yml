name: Publish release

on:
  workflow_dispatch:
    inputs:
      rc_artifact_id:
        description: 'RC Artifact ID (leave empty if not pre-release)'
        required: false
        type: string

jobs:
  publish-release:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 21.0.3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Set Up Ballerina
        uses: ballerina-platform/setup-ballerina@v1.1.1
        with:
          version: 2201.12.3

      - name: Cache Ballerina dependencies
        uses: actions/cache@v4
        id: cache-ballerina
        with:
          path: /home/runner/.ballerina/repositories/
          key: ${{ runner.os }}-ballerina-${{ hashFiles('**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-ballerina-

      - name: Set version env variable
        run: |
          # Extract BASE_VERSION from gradle.properties (strip any suffix after '-')
          BASE_VERSION=$(grep -w "version" gradle.properties | cut -d= -f2 | cut -d- -f1)
          echo BASE_VERSION=${BASE_VERSION} >> $GITHUB_ENV

          if [ -n "${{ github.event.inputs.rc_artifact_id }}" ]; then
            # Pre release - use the base version with rc suffix
            echo VERSION=${BASE_VERSION}-rc${{ github.event.inputs.rc_artifact_id }} >> $GITHUB_ENV
            echo PRE_RELEASE=true >> $GITHUB_ENV
          else
            # Normal release - use the base version
            echo VERSION=${BASE_VERSION} >> $GITHUB_ENV
            echo PRE_RELEASE=false >> $GITHUB_ENV
          fi

      - name: Pre release depenency version update
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          echo "Version: ${VERSION}"
          echo "RC Release: ${PRE_RELEASE}"
          git config user.name ${{ secrets.BALLERINA_BOT_USERNAME }}
          git config user.email ${{ secrets.BALLERINA_BOT_EMAIL }}
          git checkout -b release-${BASE_VERSION}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Release and publish artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_ACCESS_TOKEN }}
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          ./gradlew -Pversion=${VERSION} release -Prelease.useAutomaticVersion=true
          ./gradlew -Pversion=${VERSION} publish -x test

      - name: Create Github release from the release tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: ballerina-language-server-v${{ env.VERSION }}
          draft: false
          prerelease: ${{ env.PRE_RELEASE == 'true' }}

      - name: Post release PR
        if: env.PRE_RELEASE == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
          bin/hub pull-request --base main -m "[Automated] Sync main after "$VERSION" release"
