{
  "description": "A simple example of a package",
  "position": {
    "line": 8,
    "offset": 0
  },
  "source": "connector.bal",
  "categories": [
    {
      "metadata": {
        "label": "Connections",
        "description": "The connections used in the flow"
      },
      "items": [
        {
          "metadata": {
            "label": "moduleClient"
          },
          "items": [
            {
              "metadata": {
                "label": "post",
                "description": "The `Client.post()` function can be used to send HTTP POST requests to HTTP endpoints.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "post"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "put",
                "description": "The `Client.put()` function can be used to send HTTP PUT requests to HTTP endpoints.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "put"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "patch",
                "description": "The `Client.patch()` function can be used to send HTTP PATCH requests to HTTP endpoints.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "patch"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "delete",
                "description": "The `Client.delete()` function can be used to send HTTP DELETE requests to HTTP endpoints.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "delete"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "head",
                "description": "The `Client.head()` function can be used to send HTTP HEAD requests to HTTP endpoints.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "head"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "get",
                "description": "The `Client.get()` function can be used to send HTTP GET requests to HTTP endpoints.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "get"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "options",
                "description": "The `Client.options()` function can be used to send HTTP OPTIONS requests to HTTP endpoints.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "options"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "execute",
                "description": "Invokes an HTTP call with the specified HTTP verb.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "execute"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "forward",
                "description": "The `Client.forward()` function can be used to invoke an HTTP call with inbound request's HTTP verb\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "forward"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "submit",
                "description": "Submits an HTTP request to a service with the specified HTTP verb.\nThe `Client->submit()` function does not give out a `http:Response` as the result.\nRather it returns an `http:HttpFuture` which can be used to do further interactions with the endpoint.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "submit"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "getResponse",
                "description": "This just pass the request to actual network call.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "getResponse"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "hasPromise",
                "description": "This just pass the request to actual network call.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "hasPromise"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "getNextPromise",
                "description": "This just pass the request to actual network call.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "getNextPromise"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "getPromisedResponse",
                "description": "Passes the request to an actual network call.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "getPromisedResponse"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "rejectPromise",
                "description": "This just pass the request to actual network call.\n\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.0.png"
              },
              "codedata": {
                "node": "ACTION_CALL",
                "org": "ballerina",
                "module": "http",
                "object": "Client",
                "symbol": "rejectPromise"
              },
              "enabled": true
            }
          ]
        }
      ]
    },
    {
      "metadata": {
        "label": "Statement",
        "description": "Fundamental executable units in a program"
      },
      "items": [
        {
          "metadata": {
            "label": "Function Call",
            "description": "Both project and utility functions"
          },
          "codedata": {
            "node": "FUNCTION"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Data Mapper",
            "description": "Map data from multiple variables to a record type"
          },
          "codedata": {
            "node": "DATA_MAPPER"
          },
          "enabled": true
        }
      ]
    },
    {
      "metadata": {
        "label": "Control",
        "description": "Control nodes"
      },
      "items": [
        {
          "metadata": {
            "label": "Branch",
            "description": "Branching nodes"
          },
          "items": [
            {
              "metadata": {
                "label": "If",
                "description": "Add conditional branch to the integration flow."
              },
              "codedata": {
                "node": "IF"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "Switch",
                "description": "Switches the data flow based on the value of an expression."
              },
              "codedata": {
                "node": "SWITCH"
              },
              "enabled": true
            }
          ]
        },
        {
          "metadata": {
            "label": "Iteration",
            "description": "Iteration nodes"
          },
          "items": [
            {
              "metadata": {
                "label": "While",
                "description": "Loop over a block of code."
              },
              "codedata": {
                "node": "WHILE"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "Foreach",
                "description": "Iterate over a block of code."
              },
              "codedata": {
                "node": "FOREACH"
              },
              "enabled": true
            }
          ]
        },
        {
          "metadata": {
            "label": "Termination",
            "description": "Termination nodes"
          },
          "items": [
            {
              "metadata": {
                "label": "Return"
              },
              "codedata": {
                "node": "RETURN"
              },
              "enabled": true
            },
            {
              "metadata": {
                "label": "Stop",
                "description": "Stop the flow"
              },
              "codedata": {
                "node": "STOP"
              },
              "enabled": true
            }
          ]
        }
      ]
    },
    {
      "metadata": {
        "label": "Error Handling",
        "description": "Handle errors that occur during execution"
      },
      "items": [
        {
          "metadata": {
            "label": "ErrorHandler",
            "description": "Catch and handle errors"
          },
          "codedata": {
            "node": "ERROR_HANDLER"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Panic",
            "description": "Panic and stop the execution"
          },
          "codedata": {
            "node": "PANIC"
          },
          "enabled": true
        }
      ]
    },
    {
      "metadata": {
        "label": "Concurrency",
        "description": "Concurrency nodes"
      },
      "items": [
        {
          "metadata": {
            "label": "Transaction",
            "description": "Handle transaction."
          },
          "codedata": {
            "node": "TRANSACTION"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Lock",
            "description": "Allow to access mutable states safely"
          },
          "codedata": {
            "node": "LOCK"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Start",
            "description": "Execute a function or a method invocation in a new strand"
          },
          "codedata": {
            "node": "START"
          },
          "enabled": true
        }
      ]
    },
    {
      "metadata": {
        "label": "Logging"
      },
      "items": [
        {
          "metadata": {
            "label": "Log Info",
            "description": "Prints info logs.\n```ballerina\nlog:printInfo(\"info message\", id = 845315)\n```\n\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_log_2.10.0.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "log",
            "symbol": "printInfo",
            "version": "2.10.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Log Error",
            "description": "Prints error logs.\n```ballerina\nerror e = error(\"error occurred\");\nlog:printError(\"error log with cause\", 'error = e, id = 845315);\n```\n\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_log_2.10.0.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "log",
            "symbol": "printError",
            "version": "2.10.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Log Warn",
            "description": "Prints warn logs.\n```ballerina\nlog:printWarn(\"warn message\", id = 845315)\n```\n\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_log_2.10.0.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "log",
            "symbol": "printWarn",
            "version": "2.10.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Log Debug",
            "description": "Prints debug logs.\n```ballerina\nlog:printDebug(\"debug message\", id = 845315)\n```\n\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_log_2.10.0.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "log",
            "symbol": "printDebug",
            "version": "2.10.0"
          },
          "enabled": true
        }
      ]
    },
    {
      "metadata": {
        "label": "Data Conversion"
      },
      "items": [
        {
          "metadata": {
            "label": "Schema To JSON",
            "description": "Converts a value of type `anydata` to `json`.\n\n",
            "icon": ""
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "data.jsondata",
            "symbol": "toJson",
            "version": "0.2.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Schema To XML",
            "description": "Converts a `Map` or `Record` representation to its XML representation.\nAdditionally, when converting from a record, the `xmldata:Namespace`, `xmldata:Name`, and `xmldata:Attribute`\nannotations can be used to add `namespaces`, `name of elements`, and `attributes` to XML representation.\n\n",
            "icon": ""
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "data.xmldata",
            "symbol": "toXml",
            "version": "1.0.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "JSON To Schema",
            "description": "Convert value of type `json` to subtype of `anydata`.\n\n",
            "icon": ""
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "data.jsondata",
            "symbol": "parseAsType",
            "version": "0.2.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "XML To Schema",
            "description": "Converts XML to record type with projection.\n\n",
            "icon": ""
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "data.xmldata",
            "symbol": "parseAsType",
            "version": "1.0.0"
          },
          "enabled": true
        }
      ]
    },
    {
      "metadata": {
        "label": "JSON"
      },
      "items": [
        {
          "metadata": {
            "label": "Evaluate JSON Path",
            "description": "Extract details from the given JSON value using the provided query template expression.\n\n```ballerina\nread({id: 1, \"name\": \"John Doe\"}, `$.name`) => \"John Doe\"\n```\n\n",
            "icon": ""
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "data.jsondata",
            "symbol": "read",
            "version": "0.2.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "JSON Pretty Print",
            "description": "Prettifies a `json` value to print it.\n\n",
            "icon": ""
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "data.jsondata",
            "symbol": "prettify",
            "version": "0.2.0"
          },
          "enabled": true
        }
      ]
    },
    {
      "metadata": {
        "label": "XML"
      },
      "items": [
        {
          "metadata": {
            "label": "XSLT Transform",
            "description": "Transforms the single-rooted XML content to another XML/HTML/plain text using XSL transformations.\n```ballerina\nxml|error target = xslt:transform(sourceXml, xsl);\n```\n\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_xslt_2.7.0.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "xslt",
            "symbol": "transform",
            "version": "2.7.0"
          },
          "enabled": true
        }
      ]
    },
    {
      "metadata": {
        "label": "File Data"
      },
      "items": [
        {
          "metadata": {
            "label": "Read CSV",
            "description": "Read file content as a CSV.\nWhen the expected data type is record[], the first entry of the csv file should contain matching headers.\n```ballerina\nstring[][]|io:Error content = io:fileReadCsv(\"./resources/myfile.csv\");\nrecord{}[]|io:Error content = io:fileReadCsv(\"./resources/myfile.csv\");\n```\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_io_1.6.1.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "io",
            "symbol": "fileReadCsv",
            "version": "1.6.1"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Read JSON",
            "description": "Reads file content as a JSON.\n```ballerina\njson|io:Error content = io:fileReadJson(\"./resources/myfile.json\");\n```\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_io_1.6.1.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "io",
            "symbol": "fileReadJson",
            "version": "1.6.1"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Read Bytes",
            "description": "Read the entire file content as a byte array.\n```ballerina\nbyte[]|io:Error content = io:fileReadBytes(\"./resources/myfile.txt\");\n```\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_io_1.6.1.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "io",
            "symbol": "fileReadBytes",
            "version": "1.6.1"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Read XML",
            "description": "Reads file content as an XML.\n```ballerina\nxml|io:Error content = io:fileReadXml(\"./resources/myfile.xml\");\n```\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_io_1.6.1.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "io",
            "symbol": "fileReadXml",
            "version": "1.6.1"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Write CSV",
            "description": "Write CSV content to a file.\nWhen the input is a record[] type in `OVERWRITE`,  headers will be written to the CSV file by default.\nFor `APPEND`, order of the existing csv file is inferred using the headers and used as the order.\n```ballerina\ntype Coord record {int x;int y;};\nCoord[] contentRecord = [{x: 1,y: 2},{x: 1,y: 2}]\nstring[][] content = [[\"Anne\", \"Johnson\", \"SE\"], [\"John\", \"Cameron\", \"QA\"]];\nio:Error? result = io:fileWriteCsv(\"./resources/myfile.csv\", content);\nio:Error? resultRecord = io:fileWriteCsv(\"./resources/myfileRecord.csv\", contentRecord);\n```\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_io_1.6.1.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "io",
            "symbol": "fileWriteCsv",
            "version": "1.6.1"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Write JSON",
            "description": "Write a JSON to a file.\n```ballerina\njson content = {\"name\": \"Anne\", \"age\": 30};\nio:Error? result = io:fileWriteJson(\"./resources/myfile.json\", content);\n```\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_io_1.6.1.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "io",
            "symbol": "fileWriteJson",
            "version": "1.6.1"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Write Bytes",
            "description": "Write a set of bytes to a file.\n```ballerina\nbyte[] content = [60, 78, 39, 28];\nio:Error? result = io:fileWriteBytes(\"./resources/myfile.txt\", content);\n```\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_io_1.6.1.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "io",
            "symbol": "fileWriteBytes",
            "version": "1.6.1"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Write XML",
            "description": "Write XML content to a file.\n```ballerina\nxml content = xml `<book>The Lost World</book>`;\nio:Error? result = io:fileWriteXml(\"./resources/myfile.xml\", content);\n```\n",
            "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_io_1.6.1.png"
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "io",
            "symbol": "fileWriteXml",
            "version": "1.6.1"
          },
          "enabled": true
        }
      ]
    },
    {
      "metadata": {
        "label": "Time",
        "description": "This package provides a set of APIs that have the capabilities to generate and manipulate UTC and localized time.",
        "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_time_2.5.0.png"
      },
      "items": [
        {
          "metadata": {
            "label": "Get Current UTC Time",
            "description": "Returns the UTC representing the current time."
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "time",
            "symbol": "utcNow",
            "version": "2.5.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Get Current Monotonic Time",
            "description": "Returns the number of seconds from an unspecified epoch."
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "time",
            "symbol": "monotonicNow",
            "version": "2.5.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Get Time Zone",
            "description": "Return the time zone object of a given zone ID."
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "time",
            "symbol": "getZone",
            "version": "2.5.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Get Day of Week",
            "description": "Get the day of week for a specified date."
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "time",
            "symbol": "dayOfWeek",
            "version": "2.5.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "UTC Time Difference in Seconds",
            "description": "Returns the difference in seconds between `utc1` and `utc2`."
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "time",
            "symbol": "utcDiffSeconds",
            "version": "2.5.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Add Seconds to UTC",
            "description": "Returns UTC time that occurs seconds after `utc`."
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "time",
            "symbol": "utcAddSeconds",
            "version": "2.5.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Validate Gregorian Date",
            "description": "Check that days and months are within range as per Gregorian calendar rules."
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "time",
            "symbol": "dateValidate",
            "version": "2.5.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Convert Civil to UTC",
            "description": "Converts a given `Civil` value to a `Utc` timestamp."
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "time",
            "symbol": "utcFromCivil",
            "version": "2.5.0"
          },
          "enabled": true
        },
        {
          "metadata": {
            "label": "Convert UTC to Civil",
            "description": "Converts a given `time:Utc` timestamp to a `time:Civil` value."
          },
          "codedata": {
            "node": "FUNCTION_CALL",
            "org": "ballerina",
            "module": "time",
            "symbol": "utcToCivil",
            "version": "2.5.0"
          },
          "enabled": true
        }
      ]
    }
  ]
}
