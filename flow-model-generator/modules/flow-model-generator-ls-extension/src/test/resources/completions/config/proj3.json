{
  "description": "",
  "filePath": "proj/fn.bal",
  "context": {
    "expression": "[]",
    "startLine": {
      "line": 33,
      "offset": 4
    },
    "offset": 1,
    "node": {}
  },
  "completionContext": {
    "triggerKind": "Invoked"
  },
  "completions": [
    {
      "label": "decimal",
      "kind": "TypeParameter",
      "detail": "Decimal",
      "sortText": "P",
      "insertText": "decimal",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "error",
      "kind": "Event",
      "detail": "Error",
      "sortText": "N",
      "insertText": "error",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object",
      "kind": "Unit",
      "detail": "type",
      "sortText": "R",
      "insertText": "object",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transaction",
      "kind": "Unit",
      "detail": "type",
      "sortText": "R",
      "insertText": "transaction",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xml",
      "kind": "TypeParameter",
      "detail": "Xml",
      "sortText": "P",
      "insertText": "xml",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "table",
      "kind": "Unit",
      "detail": "type",
      "sortText": "R",
      "insertText": "table",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "map",
      "kind": "Unit",
      "detail": "type",
      "sortText": "R",
      "insertText": "map",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "stream",
      "kind": "Unit",
      "detail": "type",
      "sortText": "R",
      "insertText": "stream",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "boolean",
      "kind": "TypeParameter",
      "detail": "Boolean",
      "sortText": "P",
      "insertText": "boolean",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "future",
      "kind": "TypeParameter",
      "detail": "Future",
      "sortText": "P",
      "insertText": "future",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "int",
      "kind": "TypeParameter",
      "detail": "Int",
      "sortText": "P",
      "insertText": "int",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "float",
      "kind": "TypeParameter",
      "detail": "Float",
      "sortText": "P",
      "insertText": "float",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function",
      "kind": "TypeParameter",
      "detail": "Function",
      "sortText": "P",
      "insertText": "function",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "string",
      "kind": "TypeParameter",
      "detail": "String",
      "sortText": "P",
      "insertText": "string",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "typedesc",
      "kind": "TypeParameter",
      "detail": "Typedesc",
      "sortText": "P",
      "insertText": "typedesc",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "service",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "service",
      "insertText": "service",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "new",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "new",
      "insertText": "new ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "isolated",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "isolated",
      "insertText": "isolated ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transactional",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "transactional",
      "insertText": "transactional",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "function",
      "insertText": "function ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "let",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "let",
      "insertText": "let",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "typeof",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "typeof",
      "insertText": "typeof ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "trap",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "trap",
      "insertText": "trap",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "client",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "client",
      "insertText": "client ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "true",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "true",
      "insertText": "true",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "false",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "false",
      "insertText": "false",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "null",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "null",
      "insertText": "null",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "check",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "check",
      "insertText": "check ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "checkpanic",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "checkpanic",
      "insertText": "checkpanic ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "is",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "is",
      "insertText": "is",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "error constructor",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "R",
      "filterText": "error",
      "insertText": "error(\"${1}\")",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object constructor",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "R",
      "filterText": "object",
      "insertText": "object {${1}}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "base16",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "R",
      "filterText": "base16",
      "insertText": "base16 `${1}`",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "base64",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "R",
      "filterText": "base64",
      "insertText": "base64 `${1}`",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "from",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "S",
      "filterText": "from",
      "insertText": "from ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "re ``",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "R",
      "filterText": "re ``",
      "insertText": "re `${1}`",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "string ``",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "R",
      "filterText": "string ``",
      "insertText": "string `${1}`",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xml ``",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "R",
      "filterText": "xml ``",
      "insertText": "xml `${1}`",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Address",
      "kind": "Struct",
      "detail": "Record",
      "sortText": "O",
      "insertText": "Address",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Admission",
      "kind": "Struct",
      "detail": "Record",
      "sortText": "O",
      "insertText": "Admission",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Employee",
      "kind": "Struct",
      "detail": "Record",
      "sortText": "O",
      "insertText": "Employee",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Location",
      "kind": "Struct",
      "detail": "Record",
      "sortText": "O",
      "insertText": "Location",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "MyOk",
      "kind": "Struct",
      "detail": "Record",
      "sortText": "O",
      "insertText": "MyOk",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Person",
      "kind": "Struct",
      "detail": "Record",
      "sortText": "O",
      "insertText": "Person",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "StrandData",
      "kind": "Struct",
      "detail": "Record",
      "documentation": {
        "left": "Describes Strand execution details for the runtime.\n"
      },
      "sortText": "O",
      "insertText": "StrandData",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Thread",
      "kind": "TypeParameter",
      "detail": "Union",
      "sortText": "P",
      "insertText": "Thread",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "add(int a, int b)",
      "kind": "Function",
      "detail": "int",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _nipunaf/proj:0.1.0_  \n  \nAdds two integers and returns the result.\n\n```\nint result = add(5, 3);\n// result will be 8\n```  \n**Params**  \n- `int` a: The first integer to be added  \n- `int` b: The second integer to be added\n  \n  \n**Return** `int`   \n- The sum of the two integers  \n  \n# Example  \n  \n"
        }
      },
      "sortText": "E",
      "filterText": "add",
      "insertText": "add(${1})",
      "insertTextFormat": "Snippet",
      "command": {
        "title": "editor.action.triggerParameterHints",
        "command": "editor.action.triggerParameterHints"
      }
    },
    {
      "label": "greet(string name)",
      "kind": "Function",
      "detail": "string",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _nipunaf/proj:0.1.0_  \n  \n  \n**Params**  \n- `string` name  \n  \n**Return** `string`   \n  \n"
        }
      },
      "sortText": "E",
      "filterText": "greet",
      "insertText": "greet(${1})",
      "insertTextFormat": "Snippet",
      "command": {
        "title": "editor.action.triggerParameterHints",
        "command": "editor.action.triggerParameterHints"
      }
    },
    {
      "label": "main()",
      "kind": "Function",
      "detail": "()",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _nipunaf/proj:0.1.0_  \n  \n  \n"
        }
      },
      "sortText": "ZB",
      "filterText": "main",
      "insertText": "main()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "numbers",
      "kind": "Variable",
      "detail": "int[]",
      "sortText": "D",
      "insertText": "numbers",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "prefixSum(int[] numbers)",
      "kind": "Function",
      "detail": "int[]",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _nipunaf/proj:0.1.0_  \n  \nComputes the prefix sum of an array of integers.\n\nThe prefix sum of an array is a new array where each element at index `i` is the sum of the elements\nfrom the start of the array up to index `i`.\n  \n**Params**  \n- `int[]` numbers: The array of integers for which the prefix sum is to be computed.  \n  \n**Return** `int[]`   \n- An array of integers representing the prefix sum of the input array.  \n  \n"
        }
      },
      "sortText": "E",
      "filterText": "prefixSum",
      "insertText": "prefixSum(${1})",
      "insertTextFormat": "Snippet",
      "command": {
        "title": "editor.action.triggerParameterHints",
        "command": "editor.action.triggerParameterHints"
      }
    },
    {
      "label": "safeDivide(float a, float b)",
      "kind": "Function",
      "detail": "float|error",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _nipunaf/proj:0.1.0_  \n  \nPerforms a safe division operation.\n\nThis function divides the given numerator by the denominator and returns the result.\nIf the denominator is zero, it returns an error indicating a division by zero.\n  \n**Params**  \n- `float` a: The numerator of type `float`.  \n- `float` b: The denominator of type `float`.\n\n# Returns\n- `float` - The result of the division if the denominator is not zero.\n- `error` - An error indicating division by zero if the denominator is zero.\n  \n  \n**Return** `float|error`   \n- The result of the division or an error.  \n  \n"
        }
      },
      "sortText": "E",
      "filterText": "safeDivide",
      "insertText": "safeDivide(${1})",
      "insertTextFormat": "Snippet",
      "command": {
        "title": "editor.action.triggerParameterHints",
        "command": "editor.action.triggerParameterHints"
      }
    },
    {
      "label": "sum(int... numbers)",
      "kind": "Function",
      "detail": "int",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _nipunaf/proj:0.1.0_  \n  \n  \n**Params**  \n- `int[]` numbers  \n  \n**Return** `int`   \n  \n"
        }
      },
      "sortText": "E",
      "filterText": "sum",
      "insertText": "sum(${1})",
      "insertTextFormat": "Snippet",
      "command": {
        "title": "editor.action.triggerParameterHints",
        "command": "editor.action.triggerParameterHints"
      }
    },
    {
      "label": "transform(Person person, Admission admission)",
      "kind": "Function",
      "detail": "Employee",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _nipunaf/proj:0.1.0_  \n  \n  \n**Params**  \n- `Person` person  \n- `Admission` admission  \n  \n**Return** `Employee`   \n  \n"
        }
      },
      "sortText": "E",
      "filterText": "transform",
      "insertText": "transform(${1})",
      "insertTextFormat": "Snippet",
      "command": {
        "title": "editor.action.triggerParameterHints",
        "command": "editor.action.triggerParameterHints"
      }
    },
    {
      "label": "readonly",
      "kind": "TypeParameter",
      "detail": "Readonly",
      "sortText": "P",
      "insertText": "readonly",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "handle",
      "kind": "TypeParameter",
      "detail": "Handle",
      "sortText": "P",
      "insertText": "handle",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "never",
      "kind": "TypeParameter",
      "detail": "Never",
      "sortText": "P",
      "insertText": "never",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "json",
      "kind": "TypeParameter",
      "detail": "Json",
      "sortText": "P",
      "insertText": "json",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "anydata",
      "kind": "TypeParameter",
      "detail": "Anydata",
      "sortText": "P",
      "insertText": "anydata",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "any",
      "kind": "TypeParameter",
      "detail": "Any",
      "sortText": "P",
      "insertText": "any",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "byte",
      "kind": "TypeParameter",
      "detail": "Byte",
      "sortText": "P",
      "insertText": "byte",
      "insertTextFormat": "Snippet"
    }
  ]
}
