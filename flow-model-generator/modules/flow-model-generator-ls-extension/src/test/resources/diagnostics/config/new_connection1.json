{
  "description": "",
  "filePath": "source.bal",
  "context": {
    "expression": "i am not a string",
    "startLine": {
      "line": 13,
      "offset": 8
    },
    "offset": 0,
    "node": {
      "id": "31",
      "metadata": {
        "label": "New Connection",
        "description": "Ballerina Redis connector provides the capability to access Redis cache.\nThis connector lets you to perform operations to access and manipulate key-value data stored in a Redis database. \n",
        "icon": "https://bcentral-packageicons.azureedge.net/images/ballerinax_redis_3.0.2.png"
      },
      "codedata": {
        "node": "NEW_CONNECTION",
        "org": "ballerinax",
        "module": "redis",
        "object": "Client",
        "symbol": "init",
        "id": 691
      },
      "returning": false,
      "properties": {
        "connection": {
          "metadata": {
            "label": "connection",
            "description": ""
          },
          "valueType": "EXPRESSION",
          "valueTypeConstraint": "redis:ConnectionUri|redis:ConnectionParams",
          "placeholder": "\"redis://localhost:6379\"",
          "optional": true,
          "editable": true,
          "advanced": true,
          "kind": "INCLUDED_FIELD"
        },
        "connectionPooling": {
          "metadata": {
            "label": "connectionPooling",
            "description": ""
          },
          "valueType": "EXPRESSION",
          "valueTypeConstraint": "boolean",
          "placeholder": "false",
          "optional": true,
          "editable": true,
          "advanced": true,
          "kind": "INCLUDED_FIELD"
        },
        "isClusterConnection": {
          "metadata": {
            "label": "isClusterConnection",
            "description": ""
          },
          "valueType": "EXPRESSION",
          "valueTypeConstraint": "boolean",
          "placeholder": "false",
          "optional": true,
          "editable": true,
          "advanced": true,
          "kind": "INCLUDED_FIELD"
        },
        "secureSocket": {
          "metadata": {
            "label": "secureSocket",
            "description": ""
          },
          "valueType": "EXPRESSION",
          "valueTypeConstraint": "record {|ballerina/crypto:2.6.2:TrustStore|string cert?; ballerina/crypto:2.6.2:KeyStore|ballerinax/redis:3.0.2:CertKey key?; string[] protocols?; string[] ciphers?; ballerinax/redis:3.0.2:SslVerifyMode verifyMode; boolean startTls;|}",
          "placeholder": "{}",
          "optional": true,
          "editable": true,
          "advanced": true,
          "kind": "INCLUDED_FIELD"
        },
        "type": {
          "metadata": {
            "label": "Variable Type",
            "description": "Type of the variable"
          },
          "valueType": "TYPE",
          "value": "redis:Client",
          "placeholder": "var",
          "optional": false,
          "editable": false,
          "advanced": false
        },
        "variable": {
          "metadata": {
            "label": "Connection Name",
            "description": "Name of the variable"
          },
          "valueType": "IDENTIFIER",
          "value": "redisClient",
          "optional": false,
          "editable": true,
          "advanced": false
        },
        "scope": {
          "metadata": {
            "label": "Connection Scope",
            "description": "Scope of the connection, Global or Local"
          },
          "valueType": "ENUM",
          "value": "Global",
          "optional": false,
          "editable": true,
          "advanced": true
        },
        "checkError": {
          "metadata": {
            "label": "Check Error",
            "description": "Terminate on error"
          },
          "valueType": "FLAG",
          "value": true,
          "optional": false,
          "editable": false,
          "advanced": true
        }
      },
      "flags": 0
    },
    "property": "connection"
  },
  "diagnostics": [
    {
      "range": {
        "start": {
          "line": 0,
          "character": 11
        },
        "end": {
          "line": 0,
          "character": 17
        }
      },
      "severity": "Error",
      "code": {
        "left": "BCE0600"
      },
      "message": "invalid token 'string'"
    },
    {
      "range": {
        "start": {
          "line": 0,
          "character": 9
        },
        "end": {
          "line": 0,
          "character": 10
        }
      },
      "severity": "Error",
      "code": {
        "left": "BCE0600"
      },
      "message": "invalid token 'a'"
    },
    {
      "range": {
        "start": {
          "line": 0,
          "character": 5
        },
        "end": {
          "line": 0,
          "character": 8
        }
      },
      "severity": "Error",
      "code": {
        "left": "BCE0600"
      },
      "message": "invalid token 'not'"
    },
    {
      "range": {
        "start": {
          "line": 0,
          "character": 2
        },
        "end": {
          "line": 0,
          "character": 4
        }
      },
      "severity": "Error",
      "code": {
        "left": "BCE0600"
      },
      "message": "invalid token 'am'"
    }
  ]
}
