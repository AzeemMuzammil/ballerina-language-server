{
  "start": {
    "line": 8,
    "offset": 0
  },
  "end": {
    "line": 31,
    "offset": 1
  },
  "source": "data_mapper/main.bal",
  "description": "Tests a simple diagram flow",
  "diagram": {
    "fileName": "main.bal",
    "nodes": [
      {
        "id": "40394",
        "metadata": {
          "label": "Custom Expression",
          "description": "Represents a custom Ballerina expression"
        },
        "codedata": {
          "node": "EXPRESSION",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 8,
              "offset": 0
            },
            "endLine": {
              "line": 31,
              "offset": 1
            }
          },
          "sourceCode": "public function main() {\n    // Define local variables for input parameters\n    string name = \"John Doe\";\n    string email = \"john.doe@example.com\";\n    Address address = {\n        houseNo: \"123\",\n        line1: \"Main Street\",\n        line2: \"Apartment 4B\",\n        city: \"New York\",\n        country: \"USA\"\n    };\n\n    // Transform to Person\n    Person person = transformToPerson(name, email, address);\n\n    Admission admission = {\n        empId: \"EMP001\",\n        admissionDate: \"2024-08-15\"\n    };\n\n    // Transform to Employee\n    Employee employee = transformToEmployee(person, admission);\n    logEmployee(employee);\n}"
        },
        "returning": false,
        "properties": {
          "statement": {
            "metadata": {
              "label": "Statement",
              "description": "Ballerina statement"
            },
            "valueType": "EXPRESSION",
            "value": "public function main() {\n    // Define local variables for input parameters\n    string name = \"John Doe\";\n    string email = \"john.doe@example.com\";\n    Address address = {\n        houseNo: \"123\",\n        line1: \"Main Street\",\n        line2: \"Apartment 4B\",\n        city: \"New York\",\n        country: \"USA\"\n    };\n\n    // Transform to Person\n    Person person = transformToPerson(name, email, address);\n\n    Admission admission = {\n        empId: \"EMP001\",\n        admissionDate: \"2024-08-15\"\n    };\n\n    // Transform to Employee\n    Employee employee = transformToEmployee(person, admission);\n    logEmployee(employee);\n}",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "40722",
        "metadata": {
          "label": "Comment",
          "description": "Define local variables for input parameters"
        },
        "codedata": {
          "node": "COMMENT",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 9,
              "offset": 0
            },
            "endLine": {
              "line": 9,
              "offset": 50
            }
          },
          "sourceCode": "Define local variables for input parameters"
        },
        "returning": false,
        "properties": {
          "comment": {
            "metadata": {
              "label": "Comment",
              "description": "Comment to describe the flow"
            },
            "valueType": "STRING",
            "value": "Define local variables for input parameters",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "41817",
        "metadata": {
          "label": "New Variable",
          "description": "New variable 'name' with type 'string'"
        },
        "codedata": {
          "node": "NEW_DATA",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 10,
              "offset": 4
            },
            "endLine": {
              "line": 10,
              "offset": 29
            }
          },
          "sourceCode": "// Define local variables for input parameters\n    string name = \"John Doe\";"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Expression"
            },
            "valueType": "EXPRESSION",
            "value": "\"John Doe\"",
            "optional": false,
            "editable": true
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "name",
            "optional": false,
            "editable": true
          },
          "type": {
            "metadata": {
              "label": "Data type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "string",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "42822",
        "metadata": {
          "label": "New Variable",
          "description": "New variable 'email' with type 'string'"
        },
        "codedata": {
          "node": "NEW_DATA",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 11,
              "offset": 4
            },
            "endLine": {
              "line": 11,
              "offset": 42
            }
          },
          "sourceCode": "string email = \"john.doe@example.com\";"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Expression"
            },
            "valueType": "EXPRESSION",
            "value": "\"john.doe@example.com\"",
            "optional": false,
            "editable": true
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "email",
            "optional": false,
            "editable": true
          },
          "type": {
            "metadata": {
              "label": "Data type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "string",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "43964",
        "metadata": {
          "label": "New Variable",
          "description": "New variable 'address' with type 'map'"
        },
        "codedata": {
          "node": "NEW_DATA",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 12,
              "offset": 4
            },
            "endLine": {
              "line": 18,
              "offset": 6
            }
          },
          "sourceCode": "Address address = {\n        houseNo: \"123\",\n        line1: \"Main Street\",\n        line2: \"Apartment 4B\",\n        city: \"New York\",\n        country: \"USA\"\n    };"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Expression"
            },
            "valueType": "EXPRESSION",
            "value": "{\n        houseNo: \"123\",\n        line1: \"Main Street\",\n        line2: \"Apartment 4B\",\n        city: \"New York\",\n        country: \"USA\"\n    }",
            "optional": false,
            "editable": true
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "address",
            "optional": false,
            "editable": true
          },
          "type": {
            "metadata": {
              "label": "Data type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "Address",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "50649",
        "metadata": {
          "label": "Comment",
          "description": "Transform to Person"
        },
        "codedata": {
          "node": "COMMENT",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 19,
              "offset": 0
            },
            "endLine": {
              "line": 20,
              "offset": 26
            }
          },
          "sourceCode": "Transform to Person"
        },
        "returning": false,
        "properties": {
          "comment": {
            "metadata": {
              "label": "Comment",
              "description": "Comment to describe the flow"
            },
            "valueType": "STRING",
            "value": "Transform to Person",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "52760",
        "metadata": {
          "label": "Data Mapper",
          "description": "Map data from multiple variables to a record type"
        },
        "codedata": {
          "node": "DATA_MAPPER",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 21,
              "offset": 4
            },
            "endLine": {
              "line": 21,
              "offset": 60
            }
          },
          "sourceCode": "// Transform to Person\n    Person person = transformToPerson(name, email, address);"
        },
        "returning": false,
        "properties": {
          "functionName": {
            "metadata": {
              "label": "Data mapper name",
              "description": "Name of the data mapper function"
            },
            "valueType": "IDENTIFIER",
            "value": "transformToPerson",
            "optional": false,
            "editable": true
          },
          "output": {
            "metadata": {
              "label": "Output",
              "description": "Output of the data mapper function"
            },
            "valueType": "SINGLE_SELECT",
            "value": "Person",
            "optional": false,
            "editable": true
          },
          "inputs": {
            "metadata": {
              "label": "Inputs",
              "description": "Input variables of the data mapper function"
            },
            "valueType": "MULTIPLE_SELECT",
            "value": [
              "string name",
              "string email",
              "Address address"
            ],
            "optional": false,
            "editable": true
          },
          "view": {
            "metadata": {
              "label": "View",
              "description": "Visualize the data mapper function"
            },
            "valueType": "VIEW",
            "value": {
              "fileName": "data_mappings.bal",
              "startLine": {
                "line": 0,
                "offset": 0
              },
              "endLine": {
                "line": 4,
                "offset": 2
              }
            },
            "optional": false,
            "editable": false
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "person",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "54783",
        "metadata": {
          "label": "New Variable",
          "description": "New variable 'admission' with type 'map'"
        },
        "codedata": {
          "node": "NEW_DATA",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 23,
              "offset": 4
            },
            "endLine": {
              "line": 26,
              "offset": 6
            }
          },
          "sourceCode": "Admission admission = {\n        empId: \"EMP001\",\n        admissionDate: \"2024-08-15\"\n    };"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Expression"
            },
            "valueType": "EXPRESSION",
            "value": "{\n        empId: \"EMP001\",\n        admissionDate: \"2024-08-15\"\n    }",
            "optional": false,
            "editable": true
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "admission",
            "optional": false,
            "editable": true
          },
          "type": {
            "metadata": {
              "label": "Data type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "Admission",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "58587",
        "metadata": {
          "label": "Comment",
          "description": "Transform to Employee"
        },
        "codedata": {
          "node": "COMMENT",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 27,
              "offset": 0
            },
            "endLine": {
              "line": 28,
              "offset": 28
            }
          },
          "sourceCode": "Transform to Employee"
        },
        "returning": false,
        "properties": {
          "comment": {
            "metadata": {
              "label": "Comment",
              "description": "Comment to describe the flow"
            },
            "valueType": "STRING",
            "value": "Transform to Employee",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "60699",
        "metadata": {
          "label": "Data Mapper",
          "description": "Map data from multiple variables to a record type"
        },
        "codedata": {
          "node": "DATA_MAPPER",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 29,
              "offset": 4
            },
            "endLine": {
              "line": 29,
              "offset": 63
            }
          },
          "sourceCode": "// Transform to Employee\n    Employee employee = transformToEmployee(person, admission);"
        },
        "returning": false,
        "properties": {
          "functionName": {
            "metadata": {
              "label": "Data mapper name",
              "description": "Name of the data mapper function"
            },
            "valueType": "IDENTIFIER",
            "value": "transformToEmployee",
            "optional": false,
            "editable": true
          },
          "output": {
            "metadata": {
              "label": "Output",
              "description": "Output of the data mapper function"
            },
            "valueType": "SINGLE_SELECT",
            "value": "Employee",
            "optional": false,
            "editable": true
          },
          "inputs": {
            "metadata": {
              "label": "Inputs",
              "description": "Input variables of the data mapper function"
            },
            "valueType": "MULTIPLE_SELECT",
            "value": [
              "Person person",
              "Admission admission"
            ],
            "optional": false,
            "editable": true
          },
          "view": {
            "metadata": {
              "label": "View",
              "description": "Visualize the data mapper function"
            },
            "valueType": "VIEW",
            "value": {
              "fileName": "data_mappings.bal",
              "startLine": {
                "line": 6,
                "offset": 0
              },
              "endLine": {
                "line": 14,
                "offset": 2
              }
            },
            "optional": false,
            "editable": false
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "employee",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "61654",
        "metadata": {
          "label": "logEmployee"
        },
        "codedata": {
          "node": "FUNCTION_CALL",
          "org": "nipunaf",
          "module": "new_connection1",
          "symbol": "logEmployee",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 30,
              "offset": 4
            },
            "endLine": {
              "line": 30,
              "offset": 26
            }
          },
          "sourceCode": "logEmployee(employee);"
        },
        "returning": false,
        "properties": {
          "employee": {
            "metadata": {
              "label": "employee"
            },
            "valueType": "EXPRESSION",
            "value": "employee",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      }
    ],
    "connections": [
      {
        "id": "33781",
        "metadata": {
          "label": "New Connection",
          "description": "Create a new connection"
        },
        "codedata": {
          "node": "NEW_CONNECTION",
          "org": "ballerina",
          "module": "http",
          "object": "Client",
          "symbol": "init",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 2,
              "offset": 0
            },
            "endLine": {
              "line": 2,
              "offset": 53
            }
          },
          "sourceCode": "http:Client cl = check new (\"http://localhost:9090\");"
        },
        "returning": false,
        "properties": {
          "scope": {
            "metadata": {
              "label": "Connection Scope",
              "description": "Scope of the connection, Global or Local"
            },
            "valueType": "ENUM",
            "value": "Global",
            "optional": false,
            "editable": true
          },
          "url": {
            "metadata": {
              "label": "url",
              "description": "URL of the target service\n"
            },
            "valueType": "EXPRESSION",
            "value": "\"http://localhost:9090\"",
            "optional": false,
            "editable": true
          },
          "config": {
            "metadata": {
              "label": "config",
              "description": "The configurations to be used when initializing the `client`\n"
            },
            "valueType": "EXPRESSION",
            "optional": false,
            "editable": true
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "cl",
            "optional": false,
            "editable": true
          },
          "type": {
            "metadata": {
              "label": "Data type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "http:Client",
            "optional": false,
            "editable": true
          }
        },
        "flags": 1
      }
    ]
  }
}
