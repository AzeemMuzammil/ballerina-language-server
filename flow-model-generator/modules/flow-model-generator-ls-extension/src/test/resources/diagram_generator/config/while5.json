{
  "start": {
    "line": 48,
    "offset": 4
  },
  "end": {
    "line": 70,
    "offset": 5
  },
  "source": "while.bal",
  "description": "Tests a simple diagram flow",
  "diagram": {
    "fileName": "while.bal",
    "nodes": [
      {
        "id": "80171",
        "metadata": {
          "label": "HTTP API"
        },
        "codedata": {
          "node": "EVENT_HTTP_API",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 48,
              "offset": 4
            },
            "endLine": {
              "line": 70,
              "offset": 5
            }
          },
          "sourceCode": "resource function get pineapples(int count, int retries) returns string {\n        int i = 0;\n        string finalMsg = \"\";\n        while i < count {\n            json response = check foodClient->get(\"/food/pineapples\");\n            finalMsg += response.toString();\n            i += 1;\n        } on fail http:ClientError e {\n            int attempts = 0;\n            http:Client|http:ClientError adminClient = new (\"http://localhost:9090\");\n            if adminClient is http:ClientError {\n                return \"Error occurred while creating admin client\";\n            }\n            while attempts < retries {\n                json response = check adminClient->post(\"/admin/restart\", {body: e.message()});\n                return \"Response received from admin service: \" + response.toString();\n            } on fail {\n                return \"Error occurred while invoking admin service\";\n            }\n            return \"Error occurred while invoking food service\";\n        }\n        return finalMsg;\n    }"
        },
        "returning": false,
        "properties": {
          "method": {
            "metadata": {
              "label": "Method",
              "description": "HTTP Method"
            },
            "value": "get",
            "optional": false,
            "editable": true
          },
          "path": {
            "metadata": {
              "label": "Path",
              "description": "HTTP Path"
            },
            "value": "pineapples",
            "optional": false,
            "editable": true
          }
        },
        "flags": 2048
      },
      {
        "id": "80618",
        "metadata": {
          "label": "New Variable",
          "description": "New variable 'i' with type 'int'"
        },
        "codedata": {
          "node": "NEW_DATA",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 49,
              "offset": 8
            },
            "endLine": {
              "line": 49,
              "offset": 18
            }
          },
          "sourceCode": "int i = 0;"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Expression"
            },
            "valueType": "int",
            "value": "0",
            "optional": false,
            "editable": true
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "value": "i",
            "optional": false,
            "editable": true
          },
          "type": {
            "metadata": {
              "label": "Data type",
              "description": "Type of the variable"
            },
            "value": "int",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "81621",
        "metadata": {
          "label": "New Variable",
          "description": "New variable 'finalMsg' with type 'string'"
        },
        "codedata": {
          "node": "NEW_DATA",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 50,
              "offset": 8
            },
            "endLine": {
              "line": 50,
              "offset": 29
            }
          },
          "sourceCode": "string finalMsg = \"\";"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Expression"
            },
            "valueType": "string",
            "value": "\"\"",
            "optional": false,
            "editable": true
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "value": "finalMsg",
            "optional": false,
            "editable": true
          },
          "type": {
            "metadata": {
              "label": "Data type",
              "description": "Type of the variable"
            },
            "value": "string",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "83120",
        "metadata": {
          "label": "While",
          "description": "Loop over a block of code."
        },
        "codedata": {
          "node": "WHILE",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 51,
              "offset": 8
            },
            "endLine": {
              "line": 68,
              "offset": 9
            }
          },
          "sourceCode": "while i < count {\n            json response = check foodClient->get(\"/food/pineapples\");\n            finalMsg += response.toString();\n            i += 1;\n        } on fail http:ClientError e {\n            int attempts = 0;\n            http:Client|http:ClientError adminClient = new (\"http://localhost:9090\");\n            if adminClient is http:ClientError {\n                return \"Error occurred while creating admin client\";\n            }\n            while attempts < retries {\n                json response = check adminClient->post(\"/admin/restart\", {body: e.message()});\n                return \"Response received from admin service: \" + response.toString();\n            } on fail {\n                return \"Error occurred while invoking admin service\";\n            }\n            return \"Error occurred while invoking food service\";\n        }"
        },
        "returning": false,
        "branches": [
          {
            "label": "Body",
            "kind": "BLOCK",
            "codedata": {
              "node": "CONDITIONAL",
              "lineRange": {
                "fileName": "while.bal",
                "startLine": {
                  "line": 51,
                  "offset": 24
                },
                "endLine": {
                  "line": 55,
                  "offset": 9
                }
              },
              "sourceCode": "{\n            json response = check foodClient->get(\"/food/pineapples\");\n            finalMsg += response.toString();\n            i += 1;\n        }"
            },
            "repeatable": "ONE",
            "children": [
              {
                "id": "83770",
                "metadata": {
                  "label": "get",
                  "description": "The `Client.get()` function can be used to send HTTP GET requests to HTTP endpoints.\n\n",
                  "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.11.3.png"
                },
                "codedata": {
                  "node": "ACTION_CALL",
                  "org": "ballerina",
                  "module": "http",
                  "object": "Client",
                  "symbol": "get",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 52,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 52,
                      "offset": 70
                    }
                  },
                  "sourceCode": "json response = check foodClient->get(\"/food/pineapples\");"
                },
                "returning": false,
                "properties": {
                  "connection": {
                    "metadata": {
                      "label": "Connection",
                      "description": "Connection to use"
                    },
                    "valueType": "EXPRESSION",
                    "value": "foodClient",
                    "optional": false,
                    "editable": true
                  },
                  "variable": {
                    "metadata": {
                      "label": "Data variable",
                      "description": "Name of the variable"
                    },
                    "value": "response",
                    "optional": false,
                    "editable": true
                  },
                  "path": {
                    "metadata": {
                      "label": "path",
                      "description": "Request path\n"
                    },
                    "valueType": "EXPRESSION",
                    "value": "\"/food/pineapples\"",
                    "optional": false,
                    "editable": true
                  },
                  "headers": {
                    "metadata": {
                      "label": "headers",
                      "description": "The entity headers\n"
                    },
                    "valueType": "EXPRESSION",
                    "optional": true,
                    "editable": true
                  },
                  "targetType": {
                    "metadata": {
                      "label": "targetType",
                      "description": "HTTP response or `anydata`, which is expected to be returned after data binding\n"
                    },
                    "valueType": "EXPRESSION",
                    "optional": true,
                    "editable": true
                  },
                  "type": {
                    "metadata": {
                      "label": "Data type",
                      "description": "Type of the variable"
                    },
                    "value": "json",
                    "optional": false,
                    "editable": true
                  }
                },
                "flags": 1
              },
              {
                "id": "84736",
                "metadata": {
                  "label": "Custom Expression",
                  "description": "Represents a custom Ballerina expression"
                },
                "codedata": {
                  "node": "EXPRESSION",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 53,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 53,
                      "offset": 44
                    }
                  },
                  "sourceCode": "finalMsg += response.toString();"
                },
                "returning": false,
                "properties": {
                  "statement": {
                    "metadata": {
                      "label": "Statement",
                      "description": "Ballerina statement"
                    },
                    "value": "            finalMsg += response.toString();\n",
                    "optional": false,
                    "editable": true
                  }
                },
                "flags": 0
              },
              {
                "id": "85703",
                "metadata": {
                  "label": "Custom Expression",
                  "description": "Represents a custom Ballerina expression"
                },
                "codedata": {
                  "node": "EXPRESSION",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 54,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 54,
                      "offset": 19
                    }
                  },
                  "sourceCode": "i += 1;"
                },
                "returning": false,
                "properties": {
                  "statement": {
                    "metadata": {
                      "label": "Statement",
                      "description": "Ballerina statement"
                    },
                    "value": "            i += 1;\n",
                    "optional": false,
                    "editable": true
                  }
                },
                "flags": 0
              }
            ]
          },
          {
            "label": "On Failure",
            "kind": "BLOCK",
            "codedata": {
              "node": "ON_FAILURE",
              "lineRange": {
                "fileName": "while.bal",
                "startLine": {
                  "line": 55,
                  "offset": 37
                },
                "endLine": {
                  "line": 68,
                  "offset": 9
                }
              },
              "sourceCode": "{\n            int attempts = 0;\n            http:Client|http:ClientError adminClient = new (\"http://localhost:9090\");\n            if adminClient is http:ClientError {\n                return \"Error occurred while creating admin client\";\n            }\n            while attempts < retries {\n                json response = check adminClient->post(\"/admin/restart\", {body: e.message()});\n                return \"Response received from admin service: \" + response.toString();\n            } on fail {\n                return \"Error occurred while invoking admin service\";\n            }\n            return \"Error occurred while invoking food service\";\n        }"
            },
            "repeatable": "ZERO_OR_ONE",
            "properties": {
              "ignore": {
                "metadata": {
                  "label": "Ignore",
                  "description": "Ignore the error value"
                },
                "value": "true",
                "optional": false,
                "editable": true
              },
              "errorVariable": {
                "metadata": {
                  "label": "Error Variable",
                  "description": "Name of the error variable"
                },
                "value": "e ",
                "optional": false,
                "editable": true
              },
              "errorType": {
                "metadata": {
                  "label": "Error Type",
                  "description": "Type of the error"
                },
                "value": "http:ClientError",
                "optional": false,
                "editable": true
              }
            },
            "children": [
              {
                "id": "87697",
                "metadata": {
                  "label": "New Variable",
                  "description": "New variable 'attempts' with type 'int'"
                },
                "codedata": {
                  "node": "NEW_DATA",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 56,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 56,
                      "offset": 29
                    }
                  },
                  "sourceCode": "int attempts = 0;"
                },
                "returning": false,
                "properties": {
                  "expression": {
                    "metadata": {
                      "label": "Expression",
                      "description": "Expression"
                    },
                    "valueType": "int",
                    "value": "0",
                    "optional": false,
                    "editable": true
                  },
                  "variable": {
                    "metadata": {
                      "label": "Data variable",
                      "description": "Name of the variable"
                    },
                    "value": "attempts",
                    "optional": false,
                    "editable": true
                  },
                  "type": {
                    "metadata": {
                      "label": "Data type",
                      "description": "Type of the variable"
                    },
                    "value": "int",
                    "optional": false,
                    "editable": true
                  }
                },
                "flags": 0
              },
              {
                "id": "88745",
                "metadata": {
                  "label": "New Connection",
                  "description": "Create a new connection"
                },
                "codedata": {
                  "node": "NEW_CONNECTION",
                  "org": "ballerina",
                  "module": "http",
                  "object": "Client",
                  "symbol": "init",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 57,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 57,
                      "offset": 85
                    }
                  },
                  "sourceCode": "http:Client|http:ClientError adminClient = new (\"http://localhost:9090\");"
                },
                "returning": false,
                "properties": {
                  "scope": {
                    "metadata": {
                      "label": "Connection Scope",
                      "description": "Scope of the connection, Global or Local"
                    },
                    "valueType": "ENUM",
                    "value": "Local",
                    "optional": false,
                    "editable": true
                  },
                  "url": {
                    "metadata": {
                      "label": "url",
                      "description": "URL of the target service\n"
                    },
                    "valueType": "EXPRESSION",
                    "value": "\"http://localhost:9090\"",
                    "optional": false,
                    "editable": true
                  },
                  "config": {
                    "metadata": {
                      "label": "config",
                      "description": "The configurations to be used when initializing the `client`\n"
                    },
                    "valueType": "EXPRESSION",
                    "optional": false,
                    "editable": true
                  },
                  "variable": {
                    "metadata": {
                      "label": "Data variable",
                      "description": "Name of the variable"
                    },
                    "value": "adminClient",
                    "optional": false,
                    "editable": true
                  },
                  "type": {
                    "metadata": {
                      "label": "Data type",
                      "description": "Type of the variable"
                    },
                    "value": "http:Client",
                    "optional": false,
                    "editable": true
                  }
                },
                "flags": 0
              },
              {
                "id": "89727",
                "metadata": {
                  "label": "If",
                  "description": "Add conditional branch to the integration flow."
                },
                "codedata": {
                  "node": "IF",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 58,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 60,
                      "offset": 13
                    }
                  },
                  "sourceCode": "if adminClient is http:ClientError {\n                return \"Error occurred while creating admin client\";\n            }"
                },
                "returning": false,
                "branches": [
                  {
                    "label": "Then",
                    "kind": "BLOCK",
                    "codedata": {
                      "node": "CONDITIONAL",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 58,
                          "offset": 47
                        },
                        "endLine": {
                          "line": 60,
                          "offset": 13
                        }
                      },
                      "sourceCode": "{\n                return \"Error occurred while creating admin client\";\n            }"
                    },
                    "repeatable": "ONE_OR_MORE",
                    "properties": {
                      "condition": {
                        "metadata": {
                          "label": "Condition",
                          "description": "Boolean Condition"
                        },
                        "valueType": "boolean",
                        "value": "adminClient is http:ClientError ",
                        "optional": false,
                        "editable": true
                      }
                    },
                    "children": [
                      {
                        "id": "90836",
                        "metadata": {
                          "label": "Return",
                          "description": "Value of '\"Error occurred while creating admin client\"'"
                        },
                        "codedata": {
                          "node": "RETURN",
                          "lineRange": {
                            "fileName": "while.bal",
                            "startLine": {
                              "line": 59,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 59,
                              "offset": 68
                            }
                          },
                          "sourceCode": "return \"Error occurred while creating admin client\";"
                        },
                        "returning": true,
                        "properties": {
                          "expression": {
                            "metadata": {
                              "label": "Expression",
                              "description": "Return value"
                            },
                            "valueType": "string",
                            "value": "\"Error occurred while creating admin client\"",
                            "optional": false,
                            "editable": true
                          }
                        },
                        "flags": 0
                      }
                    ]
                  }
                ],
                "flags": 0
              },
              {
                "id": "92796",
                "metadata": {
                  "label": "While",
                  "description": "Loop over a block of code."
                },
                "codedata": {
                  "node": "WHILE",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 61,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 66,
                      "offset": 13
                    }
                  },
                  "sourceCode": "while attempts < retries {\n                json response = check adminClient->post(\"/admin/restart\", {body: e.message()});\n                return \"Response received from admin service: \" + response.toString();\n            } on fail {\n                return \"Error occurred while invoking admin service\";\n            }"
                },
                "returning": false,
                "branches": [
                  {
                    "label": "Body",
                    "kind": "BLOCK",
                    "codedata": {
                      "node": "CONDITIONAL",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 61,
                          "offset": 37
                        },
                        "endLine": {
                          "line": 64,
                          "offset": 13
                        }
                      },
                      "sourceCode": "{\n                json response = check adminClient->post(\"/admin/restart\", {body: e.message()});\n                return \"Response received from admin service: \" + response.toString();\n            }"
                    },
                    "repeatable": "ONE",
                    "children": [
                      {
                        "id": "93839",
                        "metadata": {
                          "label": "post",
                          "description": "The `Client.post()` function can be used to send HTTP POST requests to HTTP endpoints.\n\n",
                          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.11.3.png"
                        },
                        "codedata": {
                          "node": "ACTION_CALL",
                          "org": "ballerina",
                          "module": "http",
                          "object": "Client",
                          "symbol": "post",
                          "lineRange": {
                            "fileName": "while.bal",
                            "startLine": {
                              "line": 62,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 62,
                              "offset": 95
                            }
                          },
                          "sourceCode": "json response = check adminClient->post(\"/admin/restart\", {body: e.message()});"
                        },
                        "returning": false,
                        "properties": {
                          "connection": {
                            "metadata": {
                              "label": "Connection",
                              "description": "Connection to use"
                            },
                            "valueType": "EXPRESSION",
                            "value": "adminClient",
                            "optional": false,
                            "editable": true
                          },
                          "variable": {
                            "metadata": {
                              "label": "Data variable",
                              "description": "Name of the variable"
                            },
                            "value": "response",
                            "optional": false,
                            "editable": true
                          },
                          "path": {
                            "metadata": {
                              "label": "path",
                              "description": "Resource path\n"
                            },
                            "valueType": "EXPRESSION",
                            "value": "\"/admin/restart\"",
                            "optional": false,
                            "editable": true
                          },
                          "message": {
                            "metadata": {
                              "label": "message",
                              "description": "An HTTP outbound request or any allowed payload\n"
                            },
                            "valueType": "EXPRESSION",
                            "value": "{body: e.message()}",
                            "optional": false,
                            "editable": true
                          },
                          "headers": {
                            "metadata": {
                              "label": "headers",
                              "description": "The entity headers\n"
                            },
                            "valueType": "EXPRESSION",
                            "optional": true,
                            "editable": true
                          },
                          "mediaType": {
                            "metadata": {
                              "label": "mediaType",
                              "description": "The MIME type header of the request entity\n"
                            },
                            "valueType": "EXPRESSION",
                            "optional": true,
                            "editable": true
                          },
                          "targetType": {
                            "metadata": {
                              "label": "targetType",
                              "description": "HTTP response or `anydata`, which is expected to be returned after data binding\n"
                            },
                            "valueType": "EXPRESSION",
                            "optional": true,
                            "editable": true
                          },
                          "type": {
                            "metadata": {
                              "label": "Data type",
                              "description": "Type of the variable"
                            },
                            "value": "json",
                            "optional": false,
                            "editable": true
                          }
                        },
                        "flags": 1
                      },
                      {
                        "id": "94822",
                        "metadata": {
                          "label": "Return",
                          "description": "Value of '\"Response received from admin service: \" + response.toString()'"
                        },
                        "codedata": {
                          "node": "RETURN",
                          "lineRange": {
                            "fileName": "while.bal",
                            "startLine": {
                              "line": 63,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 63,
                              "offset": 86
                            }
                          },
                          "sourceCode": "return \"Response received from admin service: \" + response.toString();"
                        },
                        "returning": true,
                        "properties": {
                          "expression": {
                            "metadata": {
                              "label": "Expression",
                              "description": "Return value"
                            },
                            "valueType": "string",
                            "value": "\"Response received from admin service: \" + response.toString()",
                            "optional": false,
                            "editable": true
                          }
                        },
                        "flags": 0
                      }
                    ]
                  },
                  {
                    "label": "On Failure",
                    "kind": "BLOCK",
                    "codedata": {
                      "node": "ON_FAILURE",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 64,
                          "offset": 22
                        },
                        "endLine": {
                          "line": 66,
                          "offset": 13
                        }
                      },
                      "sourceCode": "{\n                return \"Error occurred while invoking admin service\";\n            }"
                    },
                    "repeatable": "ZERO_OR_ONE",
                    "children": [
                      {
                        "id": "96789",
                        "metadata": {
                          "label": "Return",
                          "description": "Value of '\"Error occurred while invoking admin service\"'"
                        },
                        "codedata": {
                          "node": "RETURN",
                          "lineRange": {
                            "fileName": "while.bal",
                            "startLine": {
                              "line": 65,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 65,
                              "offset": 69
                            }
                          },
                          "sourceCode": "return \"Error occurred while invoking admin service\";"
                        },
                        "returning": true,
                        "properties": {
                          "expression": {
                            "metadata": {
                              "label": "Expression",
                              "description": "Return value"
                            },
                            "valueType": "string",
                            "value": "\"Error occurred while invoking admin service\"",
                            "optional": false,
                            "editable": true
                          }
                        },
                        "flags": 0
                      }
                    ]
                  }
                ],
                "properties": {
                  "condition": {
                    "metadata": {
                      "label": "Condition",
                      "description": "Boolean Condition"
                    },
                    "valueType": "boolean",
                    "value": "attempts < retries ",
                    "optional": false,
                    "editable": true
                  }
                },
                "flags": 0
              },
              {
                "id": "98644",
                "metadata": {
                  "label": "Return",
                  "description": "Value of '\"Error occurred while invoking food service\"'"
                },
                "codedata": {
                  "node": "RETURN",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 67,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 67,
                      "offset": 64
                    }
                  },
                  "sourceCode": "return \"Error occurred while invoking food service\";"
                },
                "returning": true,
                "properties": {
                  "expression": {
                    "metadata": {
                      "label": "Expression",
                      "description": "Return value"
                    },
                    "valueType": "string",
                    "value": "\"Error occurred while invoking food service\"",
                    "optional": false,
                    "editable": true
                  }
                },
                "flags": 0
              }
            ]
          }
        ],
        "properties": {
          "condition": {
            "metadata": {
              "label": "Condition",
              "description": "Boolean Condition"
            },
            "valueType": "boolean",
            "value": "i < count ",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      },
      {
        "id": "100464",
        "metadata": {
          "label": "Return",
          "description": "Value of 'finalMsg'"
        },
        "codedata": {
          "node": "RETURN",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 69,
              "offset": 8
            },
            "endLine": {
              "line": 69,
              "offset": 24
            }
          },
          "sourceCode": "return finalMsg;"
        },
        "returning": true,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Return value"
            },
            "valueType": "string",
            "value": "finalMsg",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0
      }
    ],
    "connections": [
      {
        "id": "33789",
        "metadata": {
          "label": "New Connection",
          "description": "Create a new connection"
        },
        "codedata": {
          "node": "NEW_CONNECTION",
          "org": "ballerina",
          "module": "http",
          "object": "Client",
          "symbol": "init",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 2,
              "offset": 0
            },
            "endLine": {
              "line": 2,
              "offset": 61
            }
          },
          "sourceCode": "http:Client foodClient = check new (\"http://localhost:9090\");"
        },
        "returning": false,
        "properties": {
          "scope": {
            "metadata": {
              "label": "Connection Scope",
              "description": "Scope of the connection, Global or Local"
            },
            "valueType": "ENUM",
            "value": "Global",
            "optional": false,
            "editable": true
          },
          "url": {
            "metadata": {
              "label": "url",
              "description": "URL of the target service\n"
            },
            "valueType": "EXPRESSION",
            "value": "\"http://localhost:9090\"",
            "optional": false,
            "editable": true
          },
          "config": {
            "metadata": {
              "label": "config",
              "description": "The configurations to be used when initializing the `client`\n"
            },
            "valueType": "EXPRESSION",
            "optional": false,
            "editable": true
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "value": "foodClient",
            "optional": false,
            "editable": true
          },
          "type": {
            "metadata": {
              "label": "Data type",
              "description": "Type of the variable"
            },
            "value": "http:Client",
            "optional": false,
            "editable": true
          }
        },
        "flags": 1
      }
    ]
  }
}
