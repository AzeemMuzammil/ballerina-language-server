{
  "start": {
    "line": 72,
    "offset": 4
  },
  "end": {
    "line": 85,
    "offset": 5
  },
  "source": "while.bal",
  "description": "Tests a simple diagram flow",
  "diagram": {
    "fileName": "while.bal",
    "nodes": [
      {
        "id": "104971",
        "metadata": {
          "label": "Start"
        },
        "codedata": {
          "node": "EVENT_START",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 72,
              "offset": 45
            },
            "endLine": {
              "line": 85,
              "offset": 5
            }
          },
          "sourceCode": "resource function get bananas(int count) {\n        string? msg;\n        int i = 0;\n        while i < count {\n            json|error response = foodClient->get(\"/food/bananas\");\n            if (response is json) {\n                msg = \"Response received from food service: \" + response.toString();\n            } else {\n                msg = \"Error occurred while invoking food service: \" + response.message();\n                continue;\n            }\n            i += 1;\n        }\n    }"
        },
        "returning": false,
        "diagnostics": {
          "hasDiagnostics": true
        },
        "flags": 0
      },
      {
        "id": "104428",
        "metadata": {
          "label": "Variable",
          "description": "Assign a value to a variable"
        },
        "codedata": {
          "node": "VARIABLE",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 73,
              "offset": 8
            },
            "endLine": {
              "line": 73,
              "offset": 20
            }
          },
          "sourceCode": "string? msg;"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Expression"
            },
            "valueType": "EXPRESSION",
            "value": "",
            "optional": true,
            "editable": true,
            "advanced": false
          },
          "variable": {
            "metadata": {
              "label": "Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "msg",
            "placeholder": "item",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "string|()",
            "placeholder": "var",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "diagnostics": {
          "hasDiagnostics": true,
          "diagnostics": [
            {
              "severity": "WARNING",
              "message": "unused variable 'msg'"
            }
          ]
        },
        "flags": 0
      },
      {
        "id": "105418",
        "metadata": {
          "label": "Variable",
          "description": "Assign a value to a variable"
        },
        "codedata": {
          "node": "VARIABLE",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 74,
              "offset": 8
            },
            "endLine": {
              "line": 74,
              "offset": 18
            }
          },
          "sourceCode": "int i = 0;"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Expression"
            },
            "valueType": "EXPRESSION",
            "value": "0",
            "optional": true,
            "editable": true,
            "advanced": false
          },
          "variable": {
            "metadata": {
              "label": "Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "i",
            "placeholder": "item",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "int",
            "placeholder": "var",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "flags": 0
      },
      {
        "id": "106680",
        "metadata": {
          "label": "While",
          "description": "Loop over a block of code."
        },
        "codedata": {
          "node": "WHILE",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 75,
              "offset": 8
            },
            "endLine": {
              "line": 84,
              "offset": 9
            }
          },
          "sourceCode": "while i < count {\n            json|error response = foodClient->get(\"/food/bananas\");\n            if (response is json) {\n                msg = \"Response received from food service: \" + response.toString();\n            } else {\n                msg = \"Error occurred while invoking food service: \" + response.message();\n                continue;\n            }\n            i += 1;\n        }"
        },
        "returning": false,
        "branches": [
          {
            "label": "Body",
            "kind": "BLOCK",
            "codedata": {
              "node": "CONDITIONAL",
              "lineRange": {
                "fileName": "while.bal",
                "startLine": {
                  "line": 75,
                  "offset": 24
                },
                "endLine": {
                  "line": 84,
                  "offset": 9
                }
              },
              "sourceCode": "{\n            json|error response = foodClient->get(\"/food/bananas\");\n            if (response is json) {\n                msg = \"Response received from food service: \" + response.toString();\n            } else {\n                msg = \"Error occurred while invoking food service: \" + response.message();\n                continue;\n            }\n            i += 1;\n        }"
            },
            "repeatable": "ONE",
            "children": [
              {
                "id": "107575",
                "metadata": {
                  "label": "get",
                  "description": "The `Client.get()` function can be used to send HTTP GET requests to HTTP endpoints.\n",
                  "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.1.png"
                },
                "codedata": {
                  "node": "ACTION_CALL",
                  "org": "ballerina",
                  "module": "http",
                  "object": "Client",
                  "symbol": "get",
                  "version": "2.12.1",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 76,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 76,
                      "offset": 67
                    }
                  },
                  "sourceCode": "json|error response = foodClient->get(\"/food/bananas\");"
                },
                "returning": false,
                "properties": {
                  "connection": {
                    "metadata": {
                      "label": "Connection",
                      "description": "Connection to use"
                    },
                    "valueType": "EXPRESSION",
                    "value": "foodClient",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  },
                  "variable": {
                    "metadata": {
                      "label": "Variable Name",
                      "description": "Name of the variable"
                    },
                    "valueType": "IDENTIFIER",
                    "value": "response",
                    "placeholder": "item",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  },
                  "path": {
                    "metadata": {
                      "label": "path",
                      "description": "Request path"
                    },
                    "valueType": "EXPRESSION",
                    "value": "\"/food/bananas\"",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  },
                  "headers": {
                    "metadata": {
                      "label": "headers",
                      "description": "The entity headers"
                    },
                    "valueType": "EXPRESSION",
                    "optional": true,
                    "editable": true,
                    "advanced": true
                  },
                  "type": {
                    "metadata": {
                      "label": "Variable Type",
                      "description": "Type of the variable"
                    },
                    "valueType": "TYPE",
                    "value": "json",
                    "placeholder": "var",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0
              },
              {
                "id": "108668",
                "metadata": {
                  "label": "If",
                  "description": "Add conditional branch to the integration flow."
                },
                "codedata": {
                  "node": "IF",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 77,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 82,
                      "offset": 13
                    }
                  },
                  "sourceCode": "if (response is json) {\n                msg = \"Response received from food service: \" + response.toString();\n            } else {\n                msg = \"Error occurred while invoking food service: \" + response.message();\n                continue;\n            }"
                },
                "returning": false,
                "branches": [
                  {
                    "label": "Then",
                    "kind": "BLOCK",
                    "codedata": {
                      "node": "CONDITIONAL",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 77,
                          "offset": 34
                        },
                        "endLine": {
                          "line": 79,
                          "offset": 13
                        }
                      },
                      "sourceCode": "{\n                msg = \"Response received from food service: \" + response.toString();\n            }"
                    },
                    "repeatable": "ONE_OR_MORE",
                    "properties": {
                      "condition": {
                        "metadata": {
                          "label": "Condition",
                          "description": "Boolean Condition"
                        },
                        "valueType": "EXPRESSION",
                        "value": "(response is json) ",
                        "placeholder": "true",
                        "optional": false,
                        "editable": true,
                        "advanced": false
                      }
                    },
                    "children": [
                      {
                        "id": "109700",
                        "metadata": {
                          "label": "Assign",
                          "description": "Assign a value to a variable"
                        },
                        "codedata": {
                          "node": "ASSIGN",
                          "lineRange": {
                            "fileName": "while.bal",
                            "startLine": {
                              "line": 78,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 78,
                              "offset": 84
                            }
                          },
                          "sourceCode": "msg = \"Response received from food service: \" + response.toString();"
                        },
                        "returning": false,
                        "properties": {
                          "expression": {
                            "metadata": {
                              "label": "Expression",
                              "description": "Expression"
                            },
                            "valueType": "EXPRESSION",
                            "value": "\"Response received from food service: \" + response.toString()",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          },
                          "variable": {
                            "metadata": {
                              "label": "Name",
                              "description": "Result Variable"
                            },
                            "valueType": "IDENTIFIER",
                            "value": "msg",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      }
                    ]
                  },
                  {
                    "label": "Else",
                    "kind": "BLOCK",
                    "codedata": {
                      "node": "ELSE",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 79,
                          "offset": 19
                        },
                        "endLine": {
                          "line": 82,
                          "offset": 13
                        }
                      },
                      "sourceCode": "{\n                msg = \"Error occurred while invoking food service: \" + response.message();\n                continue;\n            }"
                    },
                    "repeatable": "ZERO_OR_ONE",
                    "children": [
                      {
                        "id": "111690",
                        "metadata": {
                          "label": "Assign",
                          "description": "Assign a value to a variable"
                        },
                        "codedata": {
                          "node": "ASSIGN",
                          "lineRange": {
                            "fileName": "while.bal",
                            "startLine": {
                              "line": 80,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 80,
                              "offset": 90
                            }
                          },
                          "sourceCode": "msg = \"Error occurred while invoking food service: \" + response.message();"
                        },
                        "returning": false,
                        "properties": {
                          "expression": {
                            "metadata": {
                              "label": "Expression",
                              "description": "Expression"
                            },
                            "valueType": "EXPRESSION",
                            "value": "\"Error occurred while invoking food service: \" + response.message()",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          },
                          "variable": {
                            "metadata": {
                              "label": "Name",
                              "description": "Result Variable"
                            },
                            "valueType": "IDENTIFIER",
                            "value": "msg",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "112617",
                        "metadata": {
                          "label": "Continue",
                          "description": "Skip the current iteration and continue with the next one"
                        },
                        "codedata": {
                          "node": "CONTINUE",
                          "lineRange": {
                            "fileName": "while.bal",
                            "startLine": {
                              "line": 81,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 81,
                              "offset": 25
                            }
                          },
                          "sourceCode": "continue;"
                        },
                        "returning": false,
                        "flags": 0
                      }
                    ]
                  }
                ],
                "flags": 0
              },
              {
                "id": "114471",
                "metadata": {
                  "label": "Custom Expression",
                  "description": "Represents a custom Ballerina expression"
                },
                "codedata": {
                  "node": "EXPRESSION",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 83,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 83,
                      "offset": 19
                    }
                  },
                  "sourceCode": "i += 1;"
                },
                "returning": false,
                "properties": {
                  "statement": {
                    "metadata": {
                      "label": "Statement",
                      "description": "Ballerina statement"
                    },
                    "valueType": "EXPRESSION",
                    "value": "i += 1;",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0
              }
            ]
          }
        ],
        "properties": {
          "condition": {
            "metadata": {
              "label": "Condition",
              "description": "Boolean Condition"
            },
            "valueType": "EXPRESSION",
            "value": "i < count ",
            "placeholder": "true",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "flags": 0
      }
    ],
    "connections": [
      {
        "id": "33789",
        "metadata": {
          "label": "New Connection",
          "description": "The HTTP client provides the capability for initiating contact with a remote HTTP service. The API it\nprovides includes the functions for the standard HTTP methods forwarding a received request and sending requests\nusing custom HTTP verbs.",
          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.1.png"
        },
        "codedata": {
          "node": "NEW_CONNECTION",
          "org": "ballerina",
          "module": "http",
          "object": "Client",
          "symbol": "init",
          "version": "2.12.1",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 2,
              "offset": 0
            },
            "endLine": {
              "line": 2,
              "offset": 61
            }
          },
          "sourceCode": "http:Client foodClient = check new (\"http://localhost:9090\");"
        },
        "returning": false,
        "properties": {
          "scope": {
            "metadata": {
              "label": "Connection Scope",
              "description": "Scope of the connection, Global or Local"
            },
            "valueType": "ENUM",
            "value": "Global",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "url": {
            "metadata": {
              "label": "url",
              "description": "URL of the target service"
            },
            "valueType": "EXPRESSION",
            "value": "\"http://localhost:9090\"",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "config": {
            "metadata": {
              "label": "config",
              "description": "The configurations to be used when initializing the `client`"
            },
            "valueType": "EXPRESSION",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "variable": {
            "metadata": {
              "label": "Variable Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "foodClient",
            "placeholder": "item",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Variable Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "http:Client",
            "placeholder": "var",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "flags": 1
      }
    ]
  }
}
