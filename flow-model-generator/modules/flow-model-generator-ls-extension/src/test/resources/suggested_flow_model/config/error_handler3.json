{
  "start": {
    "line": 4,
    "offset": 4
  },
  "end": {
    "line": 12,
    "offset": 5
  },
  "source": "error_handler/service.bal",
  "text": "     int a = 12;\nreturn \"foo\";\nreturn name;",
  "position": {
    "line": 10,
    "offset": 0
  },
  "description": "",
  "forceAssign": false,
  "diagram": {
    "fileName": "service.bal",
    "nodes": [
      {
        "id": "38197",
        "metadata": {
          "label": "Start"
        },
        "codedata": {
          "node": "EVENT_START",
          "lineRange": {
            "fileName": "service.bal",
            "startLine": {
              "line": 4,
              "offset": 70
            },
            "endLine": {
              "line": 14,
              "offset": 5
            }
          },
          "sourceCode": "resource function get greeting(string? name) returns string|error {\n        do {\n            if name is string {\n\n            }\n        } on fail error e {\n     int a = 12;\nreturn \"foo\";\nreturn name;            \n        }\n    }"
        },
        "returning": false,
        "diagnostics": {
          "hasDiagnostics": true
        },
        "flags": 0
      },
      {
        "id": "37209",
        "metadata": {
          "label": "ErrorHandler",
          "description": "Catch and handle errors"
        },
        "codedata": {
          "node": "ERROR_HANDLER",
          "lineRange": {
            "fileName": "service.bal",
            "startLine": {
              "line": 5,
              "offset": 8
            },
            "endLine": {
              "line": 13,
              "offset": 9
            }
          },
          "sourceCode": "do {\n            if name is string {\n\n            }\n        } on fail error e {\n     int a = 12;\nreturn \"foo\";\nreturn name;            \n        }"
        },
        "returning": false,
        "branches": [
          {
            "label": "Body",
            "kind": "BLOCK",
            "codedata": {
              "node": "BODY",
              "lineRange": {
                "fileName": "service.bal",
                "startLine": {
                  "line": 5,
                  "offset": 11
                },
                "endLine": {
                  "line": 9,
                  "offset": 9
                }
              },
              "sourceCode": "{\n            if name is string {\n\n            }\n        }"
            },
            "repeatable": "ONE",
            "children": [
              {
                "id": "38143",
                "metadata": {
                  "label": "If",
                  "description": "Add conditional branch to the integration flow."
                },
                "codedata": {
                  "node": "IF",
                  "lineRange": {
                    "fileName": "service.bal",
                    "startLine": {
                      "line": 6,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 8,
                      "offset": 13
                    }
                  },
                  "sourceCode": "if name is string {\n\n            }"
                },
                "returning": false,
                "branches": [
                  {
                    "label": "Then",
                    "kind": "BLOCK",
                    "codedata": {
                      "node": "CONDITIONAL",
                      "lineRange": {
                        "fileName": "service.bal",
                        "startLine": {
                          "line": 6,
                          "offset": 30
                        },
                        "endLine": {
                          "line": 8,
                          "offset": 13
                        }
                      },
                      "sourceCode": "{\n\n            }"
                    },
                    "repeatable": "ONE_OR_MORE",
                    "properties": {
                      "condition": {
                        "metadata": {
                          "label": "Condition",
                          "description": "Boolean Condition"
                        },
                        "valueType": "EXPRESSION",
                        "value": "name is string ",
                        "placeholder": "true",
                        "optional": false,
                        "editable": true,
                        "advanced": false
                      }
                    },
                    "children": []
                  }
                ],
                "flags": 0
              }
            ],
            "suggested": false
          },
          {
            "label": "On Failure",
            "kind": "BLOCK",
            "codedata": {
              "node": "ON_FAILURE",
              "lineRange": {
                "fileName": "service.bal",
                "startLine": {
                  "line": 9,
                  "offset": 26
                },
                "endLine": {
                  "line": 13,
                  "offset": 9
                }
              },
              "sourceCode": "{\n     int a = 12;\nreturn \"foo\";\nreturn name;            \n        }"
            },
            "repeatable": "ZERO_OR_ONE",
            "properties": {
              "ignore": {
                "metadata": {
                  "label": "Ignore",
                  "description": "Ignore the error value"
                },
                "valueType": "EXPRESSION",
                "value": "false",
                "optional": false,
                "editable": true,
                "advanced": false
              },
              "errorVariable": {
                "metadata": {
                  "label": "Error Variable",
                  "description": "Name of the error variable"
                },
                "valueType": "IDENTIFIER",
                "value": "e ",
                "placeholder": "err",
                "optional": false,
                "editable": true,
                "advanced": false
              },
              "errorType": {
                "metadata": {
                  "label": "Error Type",
                  "description": "Type of the error"
                },
                "valueType": "TYPE",
                "value": "error",
                "placeholder": "error",
                "optional": false,
                "editable": true,
                "advanced": false
              }
            },
            "children": [
              {
                "id": "41835",
                "metadata": {
                  "label": "Variable",
                  "description": "Assign a value to a variable"
                },
                "codedata": {
                  "node": "VARIABLE",
                  "lineRange": {
                    "fileName": "service.bal",
                    "startLine": {
                      "line": 10,
                      "offset": 5
                    },
                    "endLine": {
                      "line": 10,
                      "offset": 16
                    }
                  },
                  "sourceCode": "int a = 12;"
                },
                "returning": false,
                "properties": {
                  "expression": {
                    "metadata": {
                      "label": "Expression",
                      "description": "Initialize with value"
                    },
                    "valueType": "EXPRESSION",
                    "value": "12",
                    "optional": true,
                    "editable": true,
                    "advanced": false
                  },
                  "variable": {
                    "metadata": {
                      "label": "Name",
                      "description": "Name of the variable"
                    },
                    "valueType": "IDENTIFIER",
                    "value": "a",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  },
                  "type": {
                    "metadata": {
                      "label": "Type",
                      "description": "Type of the variable"
                    },
                    "valueType": "TYPE",
                    "value": "int",
                    "placeholder": "var",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0,
                "suggested": true
              },
              {
                "id": "42669",
                "metadata": {
                  "label": "Return",
                  "description": "Value of '\"foo\"'"
                },
                "codedata": {
                  "node": "RETURN",
                  "lineRange": {
                    "fileName": "service.bal",
                    "startLine": {
                      "line": 11,
                      "offset": 0
                    },
                    "endLine": {
                      "line": 11,
                      "offset": 13
                    }
                  },
                  "sourceCode": "return \"foo\";"
                },
                "returning": true,
                "properties": {
                  "expression": {
                    "metadata": {
                      "label": "Expression",
                      "description": "Return value"
                    },
                    "valueType": "EXPRESSION",
                    "value": "\"foo\"",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0,
                "suggested": true
              }
            ]
          }
        ],
        "diagnostics": {
          "hasDiagnostics": true
        },
        "flags": 0
      }
    ],
    "connections": [
      {
        "id": "33788",
        "metadata": {
          "label": "New Connection",
          "description": "The HTTP client provides the capability for initiating contact with a remote HTTP service. The API it\nprovides includes the functions for the standard HTTP methods forwarding a received request and sending requests\nusing custom HTTP verbs.",
          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.2.png"
        },
        "codedata": {
          "node": "NEW_CONNECTION",
          "org": "ballerina",
          "module": "http",
          "object": "Client",
          "symbol": "init",
          "version": "2.12.2",
          "lineRange": {
            "fileName": "service2.bal",
            "startLine": {
              "line": 2,
              "offset": 0
            },
            "endLine": {
              "line": 2,
              "offset": 60
            }
          },
          "sourceCode": "http:Client ratesBackend = check new (\"localhost:9090\", {});"
        },
        "returning": false,
        "properties": {
          "scope": {
            "metadata": {
              "label": "Connection Scope",
              "description": "Scope of the connection, Global or Local"
            },
            "valueType": "ENUM",
            "value": "Global",
            "optional": false,
            "editable": true,
            "advanced": true
          },
          "checkError": {
            "metadata": {
              "label": "Check Error",
              "description": "Terminate on error"
            },
            "valueType": "FLAG",
            "value": true,
            "optional": false,
            "editable": false,
            "advanced": true
          },
          "url": {
            "metadata": {
              "label": "url",
              "description": "URL of the target service"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "string",
            "value": "\"localhost:9090\"",
            "placeholder": "\"\"",
            "optional": false,
            "editable": true,
            "advanced": false,
            "kind": "REQUIRED"
          },
          "config": {
            "metadata": {
              "label": "config",
              "description": "The configurations to be used when initializing the `client`"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:ClientConfiguration",
            "value": "{}",
            "placeholder": "{}",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_RECORD"
          },
          "variable": {
            "metadata": {
              "label": "Connection Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "ratesBackend",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Connection Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "http:Client",
            "placeholder": "var",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "flags": 1
      }
    ]
  }
}
