{
  "start": {
    "line": 6,
    "offset": 0
  },
  "end": {
    "line": 15,
    "offset": 1
  },
  "source": "if.bal",
  "text": "   int z = x + y;\n        if (z > 30) {\n            print(\"Sum is greater than 30\");\n        } else {\n            print(\"Sum is less than or equal to 30);\n        }",
  "position": {
    "line": 9,
    "offset": 0
  },
  "description": "",
  "diagram": {
    "fileName": "if.bal",
    "nodes": [
      {
        "id": "38131",
        "metadata": {
          "label": "Custom Expression",
          "description": "Represents a custom Ballerina expression"
        },
        "codedata": {
          "node": "EXPRESSION",
          "lineRange": {
            "fileName": "if.bal",
            "startLine": {
              "line": 6,
              "offset": 0
            },
            "endLine": {
              "line": 20,
              "offset": 1
            }
          },
          "sourceCode": "function fn2() {\n    int x = 10;\n    int y = 20;\n   int z = x + y;\n        if (z > 30) {\n            print(\"Sum is greater than 30\");\n        } else {\n            print(\"Sum is less than or equal to 30);\n        }\n    if (x > y) {\n        print(\"x is greater than y\");\n    } else {\n        print(\"x is equal to y\");\n    }\n}"
        },
        "returning": false,
        "flags": 0
      },
      {
        "id": "38827",
        "metadata": {
          "label": "New Variable",
          "description": "New variable 'x' with type 'int'"
        },
        "codedata": {
          "node": "NEW_DATA",
          "lineRange": {
            "fileName": "if.bal",
            "startLine": {
              "line": 7,
              "offset": 4
            },
            "endLine": {
              "line": 7,
              "offset": 15
            }
          },
          "sourceCode": "int x = 10;"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Expression"
            },
            "valueType": "EXPRESSION",
            "value": "10",
            "optional": false,
            "editable": true
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "x",
            "optional": false,
            "editable": true
          },
          "type": {
            "metadata": {
              "label": "Data type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "int",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0,
        "suggested": false
      },
      {
        "id": "39819",
        "metadata": {
          "label": "New Variable",
          "description": "New variable 'y' with type 'int'"
        },
        "codedata": {
          "node": "NEW_DATA",
          "lineRange": {
            "fileName": "if.bal",
            "startLine": {
              "line": 8,
              "offset": 4
            },
            "endLine": {
              "line": 8,
              "offset": 15
            }
          },
          "sourceCode": "int y = 20;"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Expression"
            },
            "valueType": "EXPRESSION",
            "value": "20",
            "optional": false,
            "editable": true
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "y",
            "optional": false,
            "editable": true
          },
          "type": {
            "metadata": {
              "label": "Data type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "int",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0,
        "suggested": false
      },
      {
        "id": "40782",
        "metadata": {
          "label": "New Variable",
          "description": "New variable 'z' with type 'int'"
        },
        "codedata": {
          "node": "NEW_DATA",
          "lineRange": {
            "fileName": "if.bal",
            "startLine": {
              "line": 9,
              "offset": 3
            },
            "endLine": {
              "line": 9,
              "offset": 17
            }
          },
          "sourceCode": "int z = x + y;"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Expression"
            },
            "valueType": "EXPRESSION",
            "value": "x + y",
            "optional": false,
            "editable": true
          },
          "variable": {
            "metadata": {
              "label": "Data variable",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "z",
            "optional": false,
            "editable": true
          },
          "type": {
            "metadata": {
              "label": "Data type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "int",
            "optional": false,
            "editable": true
          }
        },
        "flags": 0,
        "suggested": true
      },
      {
        "id": "46877",
        "metadata": {
          "label": "If",
          "description": "Add conditional branch to the integration flow."
        },
        "codedata": {
          "node": "IF",
          "lineRange": {
            "fileName": "if.bal",
            "startLine": {
              "line": 15,
              "offset": 4
            },
            "endLine": {
              "line": 19,
              "offset": 5
            }
          },
          "sourceCode": "if (x > y) {\n        print(\"x is greater than y\");\n    } else {\n        print(\"x is equal to y\");\n    }"
        },
        "returning": false,
        "branches": [
          {
            "label": "Then",
            "kind": "BLOCK",
            "codedata": {
              "node": "CONDITIONAL",
              "lineRange": {
                "fileName": "if.bal",
                "startLine": {
                  "line": 15,
                  "offset": 15
                },
                "endLine": {
                  "line": 17,
                  "offset": 5
                }
              },
              "sourceCode": "{\n        print(\"x is greater than y\");\n    }"
            },
            "repeatable": "ONE_OR_MORE",
            "properties": {
              "condition": {
                "metadata": {
                  "label": "Condition",
                  "description": "Boolean Condition"
                },
                "valueType": "EXPRESSION",
                "value": "(x > y) ",
                "optional": false,
                "editable": true
              }
            },
            "children": [
              {
                "id": "47901",
                "metadata": {
                  "label": "Custom Expression",
                  "description": "Represents a custom Ballerina expression"
                },
                "codedata": {
                  "node": "EXPRESSION",
                  "lineRange": {
                    "fileName": "if.bal",
                    "startLine": {
                      "line": 16,
                      "offset": 8
                    },
                    "endLine": {
                      "line": 16,
                      "offset": 37
                    }
                  },
                  "sourceCode": "print(\"x is greater than y\");"
                },
                "returning": false,
                "properties": {
                  "statement": {
                    "metadata": {
                      "label": "Statement",
                      "description": "Ballerina statement"
                    },
                    "valueType": "EXPRESSION",
                    "value": "        print(\"x is greater than y\");\n",
                    "optional": false,
                    "editable": true
                  }
                },
                "flags": 0
              }
            ]
          },
          {
            "label": "Else",
            "kind": "BLOCK",
            "codedata": {
              "node": "ELSE",
              "lineRange": {
                "fileName": "if.bal",
                "startLine": {
                  "line": 17,
                  "offset": 6
                },
                "endLine": {
                  "line": 19,
                  "offset": 5
                }
              },
              "sourceCode": "else {\n        print(\"x is equal to y\");\n    }"
            },
            "repeatable": "ZERO_OR_ONE",
            "children": [
              {
                "id": "49881",
                "metadata": {
                  "label": "Custom Expression",
                  "description": "Represents a custom Ballerina expression"
                },
                "codedata": {
                  "node": "EXPRESSION",
                  "lineRange": {
                    "fileName": "if.bal",
                    "startLine": {
                      "line": 18,
                      "offset": 8
                    },
                    "endLine": {
                      "line": 18,
                      "offset": 33
                    }
                  },
                  "sourceCode": "print(\"x is equal to y\");"
                },
                "returning": false,
                "properties": {
                  "statement": {
                    "metadata": {
                      "label": "Statement",
                      "description": "Ballerina statement"
                    },
                    "valueType": "EXPRESSION",
                    "value": "        print(\"x is equal to y\");\n",
                    "optional": false,
                    "editable": true
                  }
                },
                "flags": 0
              }
            ]
          }
        ],
        "flags": 0,
        "suggested": false
      }
    ],
    "connections": []
  }
}
