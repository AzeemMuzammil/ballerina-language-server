{
  "source": "empty.bal",
  "description": "Sample diagram node",
  "diagram": {
    "id": "82775",
    "metadata": {
      "label": "Parallel Flow",
      "description": "Create parallel flows"
    },
    "codedata": {
      "node": "PARALLEL_FLOW",
      "lineRange": {
        "fileName": "wait.bal",
        "startLine": {
          "line": 51,
          "offset": 4
        },
        "endLine": {
          "line": 61,
          "offset": 5
        }
      }
    },
    "returning": false,
    "branches": [
      {
        "label": "A",
        "kind": "WORKER",
        "codedata": {
          "node": "WORKER",
          "lineRange": {
            "fileName": "wait.bal",
            "startLine": {
              "line": 51,
              "offset": 4
            },
            "endLine": {
              "line": 53,
              "offset": 5
            }
          },
          "sourceCode": "worker A returns string|error {\n        return mockFetch(\"http://a.com\", 2);\n    }"
        },
        "repeatable": "ONE_OR_MORE",
        "properties": {
          "variable": {
            "metadata": {
              "label": "Worker Name",
              "description": "Name of the worker"
            },
            "valueType": "IDENTIFIER",
            "value": "A",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Return Type",
              "description": "Return type of the function/worker"
            },
            "valueType": "TYPE",
            "value": "string|error",
            "optional": true,
            "editable": true,
            "advanced": false
          }
        },
        "children": [
          {
            "id": "83620",
            "metadata": {
              "label": "mockFetch",
              "description": ""
            },
            "codedata": {
              "node": "FUNCTION_CALL",
              "org": "$anon",
              "module": ".",
              "symbol": "mockFetch",
              "version": "0.0.0",
              "lineRange": {
                "fileName": "wait.bal",
                "startLine": {
                  "line": 52,
                  "offset": 8
                },
                "endLine": {
                  "line": 52,
                  "offset": 44
                }
              },
              "sourceCode": "return mockFetch(\"http://a.com\", 2);"
            },
            "returning": true,
            "properties": {
              "view": {
                "metadata": {
                  "label": "View",
                  "description": "Function definition location"
                },
                "valueType": "VIEW",
                "value": {
                  "fileName": "wait.bal",
                  "startLine": {
                    "line": 4,
                    "offset": 0
                  },
                  "endLine": {
                    "line": 10,
                    "offset": 1
                  }
                },
                "optional": false,
                "editable": false,
                "advanced": false
              },
              "url": {
                "metadata": {
                  "label": "url"
                },
                "valueType": "EXPRESSION",
                "valueTypeConstraint": "string",
                "value": "\"http://a.com\"",
                "placeholder": "\"\"",
                "optional": false,
                "editable": true,
                "advanced": false,
                "codedata": {
                  "kind": "REQUIRED",
                  "originalName": "url"
                }
              },
              "delay": {
                "metadata": {
                  "label": "delay"
                },
                "valueType": "EXPRESSION",
                "valueTypeConstraint": "decimal",
                "value": "2",
                "placeholder": "0.0d",
                "optional": true,
                "editable": true,
                "advanced": true,
                "codedata": {
                  "kind": "DEFAULTABLE",
                  "originalName": "delay"
                }
              }
            },
            "flags": 0
          }
        ]
      },
      {
        "label": "B",
        "kind": "WORKER",
        "codedata": {
          "node": "WORKER",
          "lineRange": {
            "fileName": "wait.bal",
            "startLine": {
              "line": 55,
              "offset": 4
            },
            "endLine": {
              "line": 57,
              "offset": 5
            }
          },
          "sourceCode": "worker B returns string|error {\n        return mockFetch(\"http://b.com\", 1);\n    }"
        },
        "repeatable": "ONE_OR_MORE",
        "properties": {
          "variable": {
            "metadata": {
              "label": "Worker Name",
              "description": "Name of the worker"
            },
            "valueType": "IDENTIFIER",
            "value": "B",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Return Type",
              "description": "Return type of the function/worker"
            },
            "valueType": "TYPE",
            "value": "string|error",
            "optional": true,
            "editable": true,
            "advanced": false
          }
        },
        "children": [
          {
            "id": "87588",
            "metadata": {
              "label": "mockFetch",
              "description": ""
            },
            "codedata": {
              "node": "FUNCTION_CALL",
              "org": "$anon",
              "module": ".",
              "symbol": "mockFetch",
              "version": "0.0.0",
              "lineRange": {
                "fileName": "wait.bal",
                "startLine": {
                  "line": 56,
                  "offset": 8
                },
                "endLine": {
                  "line": 56,
                  "offset": 44
                }
              },
              "sourceCode": "return mockFetch(\"http://b.com\", 1);"
            },
            "returning": true,
            "properties": {
              "view": {
                "metadata": {
                  "label": "View",
                  "description": "Function definition location"
                },
                "valueType": "VIEW",
                "value": {
                  "fileName": "wait.bal",
                  "startLine": {
                    "line": 4,
                    "offset": 0
                  },
                  "endLine": {
                    "line": 10,
                    "offset": 1
                  }
                },
                "optional": false,
                "editable": false,
                "advanced": false
              },
              "url": {
                "metadata": {
                  "label": "url"
                },
                "valueType": "EXPRESSION",
                "valueTypeConstraint": "string",
                "value": "\"http://b.com\"",
                "placeholder": "\"\"",
                "optional": false,
                "editable": true,
                "advanced": false,
                "codedata": {
                  "kind": "REQUIRED",
                  "originalName": "url"
                }
              },
              "delay": {
                "metadata": {
                  "label": "delay"
                },
                "valueType": "EXPRESSION",
                "valueTypeConstraint": "decimal",
                "value": "1",
                "placeholder": "0.0d",
                "optional": true,
                "editable": true,
                "advanced": true,
                "codedata": {
                  "kind": "DEFAULTABLE",
                  "originalName": "delay"
                }
              }
            },
            "flags": 0
          }
        ]
      },
      {
        "label": "C",
        "kind": "WORKER",
        "codedata": {
          "node": "WORKER",
          "lineRange": {
            "fileName": "wait.bal",
            "startLine": {
              "line": 59,
              "offset": 4
            },
            "endLine": {
              "line": 61,
              "offset": 5
            }
          },
          "sourceCode": "worker C returns string|error {\n        return mockFetch(\"http://c.com\", 3);\n    }"
        },
        "repeatable": "ONE_OR_MORE",
        "properties": {
          "variable": {
            "metadata": {
              "label": "Worker Name",
              "description": "Name of the worker"
            },
            "valueType": "IDENTIFIER",
            "value": "C",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Return Type",
              "description": "Return type of the function/worker"
            },
            "valueType": "TYPE",
            "value": "string|error",
            "optional": true,
            "editable": true,
            "advanced": false
          }
        },
        "children": [
          {
            "id": "91556",
            "metadata": {
              "label": "mockFetch",
              "description": ""
            },
            "codedata": {
              "node": "FUNCTION_CALL",
              "org": "$anon",
              "module": ".",
              "symbol": "mockFetch",
              "version": "0.0.0",
              "lineRange": {
                "fileName": "wait.bal",
                "startLine": {
                  "line": 60,
                  "offset": 8
                },
                "endLine": {
                  "line": 60,
                  "offset": 44
                }
              },
              "sourceCode": "return mockFetch(\"http://c.com\", 3);"
            },
            "returning": true,
            "properties": {
              "view": {
                "metadata": {
                  "label": "View",
                  "description": "Function definition location"
                },
                "valueType": "VIEW",
                "value": {
                  "fileName": "wait.bal",
                  "startLine": {
                    "line": 4,
                    "offset": 0
                  },
                  "endLine": {
                    "line": 10,
                    "offset": 1
                  }
                },
                "optional": false,
                "editable": false,
                "advanced": false
              },
              "url": {
                "metadata": {
                  "label": "url"
                },
                "valueType": "EXPRESSION",
                "valueTypeConstraint": "string",
                "value": "\"http://c.com\"",
                "placeholder": "\"\"",
                "optional": false,
                "editable": true,
                "advanced": false,
                "codedata": {
                  "kind": "REQUIRED",
                  "originalName": "url"
                }
              },
              "delay": {
                "metadata": {
                  "label": "delay"
                },
                "valueType": "EXPRESSION",
                "valueTypeConstraint": "decimal",
                "value": "3",
                "placeholder": "0.0d",
                "optional": true,
                "editable": true,
                "advanced": true,
                "codedata": {
                  "kind": "DEFAULTABLE",
                  "originalName": "delay"
                }
              }
            },
            "flags": 0
          }
        ]
      }
    ],
    "flags": 0
  },
  "output": {
    "empty.bal": [
      {
        "range": {
          "start": {
            "line": 51,
            "character": 4
          },
          "end": {
            "line": 61,
            "character": 5
          }
        },
        "newText": "worker A returns string|error{\nmockFetch(\"http://a.com\", 2); } worker B returns string|error{\nmockFetch(\"http://b.com\", 1); } worker C returns string|error{\nmockFetch(\"http://c.com\", 3); }"
      }
    ]
  }
}
