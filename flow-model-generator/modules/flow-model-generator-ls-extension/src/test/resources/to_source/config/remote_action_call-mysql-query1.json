{
  "source": "empty.bal",
  "description": "Sample diagram node",
  "diagram": {
    "id": "42838",
    "metadata": {
      "label": "query",
      "description": "Executes the query, which may return multiple results.\nWhen processing the stream, make sure to consume all fetched data or close the stream.\n",
      "icon": "https://bcentral-packageicons.azureedge.net/images/ballerinax_mysql_1.14.0.png"
    },
    "codedata": {
      "node": "REMOTE_ACTION_CALL",
      "org": "ballerinax",
      "module": "mysql",
      "object": "Client",
      "symbol": "query",
      "version": "1.14.0",
      "lineRange": {
        "fileName": "mysql.bal",
        "startLine": {
          "line": 11,
          "offset": 4
        },
        "endLine": {
          "line": 11,
          "offset": 58
        }
      },
      "sourceCode": "stream<Row, sql:Error?> res1 = mysqlClient->query(``);",
      "inferredReturnType": "stream<rowType, sql:Error?>"
    },
    "returning": false,
    "properties": {
      "connection": {
        "metadata": {
          "label": "Connection",
          "description": "Connection to use"
        },
        "valueType": "EXPRESSION",
        "value": "mysqlClient",
        "optional": false,
        "editable": false,
        "advanced": false
      },
      "rowType": {
        "metadata": {
          "label": "rowType",
          "description": "The `typedesc` of the record to which the result needs to be returned"
        },
        "valueType": "TYPE",
        "valueTypeConstraint": "record {|anydata...;|}",
        "value": "record{|string name;|}",
        "placeholder": "record {|anydata...;|}",
        "optional": false,
        "editable": true,
        "advanced": false,
        "codedata": {
          "kind": "PARAM_FOR_TYPE_INFER",
          "originalName": "rowType"
        }
      },
      "sqlQuery": {
        "metadata": {
          "label": "sqlQuery",
          "description": "The SQL query such as `` `SELECT * from Album WHERE name=${albumName}` ``"
        },
        "valueType": "EXPRESSION",
        "valueTypeConstraint": "sql:ParameterizedQuery",
        "value": "``",
        "placeholder": "object {}",
        "optional": false,
        "editable": true,
        "advanced": false,
        "codedata": {
          "kind": "REQUIRED",
          "originalName": "sqlQuery",
          "importStatements": "ballerina/sql"
        },
        "typeMembers": [
          {
            "type": "ParameterizedQuery",
            "packageInfo": "ballerina:sql:1.15.0",
            "kind": "OBJECT_TYPE",
            "selected": true
          }
        ]
      },
      "variable": {
        "metadata": {
          "label": "Variable Name",
          "description": "Name of the variable"
        },
        "valueType": "IDENTIFIER",
        "value": "res1",
        "optional": false,
        "editable": false,
        "advanced": false,
        "codedata": {
          "lineRange": {
            "fileName": "mysql.bal",
            "startLine": {
              "line": 11,
              "offset": 28
            },
            "endLine": {
              "line": 11,
              "offset": 32
            }
          }
        }
      },
      "type": {
        "metadata": {
          "label": "Variable Type",
          "description": "Type of the variable"
        },
        "valueType": "TYPE",
        "value": "stream<Row, sql:Error?>",
        "placeholder": "var",
        "optional": false,
        "editable": true,
        "advanced": false
      }
    },
    "flags": 0
  },
  "output": {
    "empty.bal": [
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "import ballerinax/mysql;"
      },
      {
        "range": {
          "start": {
            "line": 11,
            "character": 4
          },
          "end": {
            "line": 11,
            "character": 58
          }
        },
        "newText": "stream<record {|string name;|}, sql:Error?> res1 = mysqlClient->query(``);"
      }
    ]
  }
}
