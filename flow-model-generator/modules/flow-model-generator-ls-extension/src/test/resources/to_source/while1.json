{
  "description": "Sample diagram node",
  "diagram": {
    "id": "40185",
    "metadata": {
      "label": "While",
      "description": "Loop over a block of code."
    },
    "codedata": {
      "node": "WHILE",
      "lineRange": {
        "fileName": "while.bal",
        "startLine": {
          "line": 8,
          "offset": 8
        },
        "endLine": {
          "line": 16,
          "offset": 9
        }
      }
    },
    "returning": false,
    "branches": [
      {
        "label": "Body",
        "kind": "BLOCK",
        "codedata": {
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 8,
              "offset": 24
            },
            "endLine": {
              "line": 16,
              "offset": 9
            }
          }
        },
        "repeatable": "ONE",
        "children": [
          {
            "id": "41121",
            "metadata": {
              "label": "HTTP GET"
            },
            "codedata": {
              "node": "ACTION_CALL",
              "lineRange": {
                "fileName": "while.bal",
                "startLine": {
                  "line": 9,
                  "offset": 12
                },
                "endLine": {
                  "line": 9,
                  "offset": 77
                }
              }
            },
            "returning": false,
            "properties": {
              "client": {
                "metadata": {
                  "label": "Client",
                  "description": "HTTP Client Connection"
                },
                "valueType": "http:Client",
                "value": "foodClient",
                "optional": false,
                "editable": true
              },
              "variable": {
                "metadata": {
                  "label": "Variable",
                  "description": "Result Variable"
                },
                "valueType": "json|http:ClientError",
                "value": "response ",
                "optional": false,
                "editable": true
              },
              "path": {
                "metadata": {
                  "label": "Path",
                  "description": "HTTP Path"
                },
                "valueType": "string",
                "value": "\"/food/apples\"",
                "optional": false,
                "editable": true
              },
              "headers": {
                "metadata": {
                  "label": "Headers",
                  "description": "HTTP Headers"
                },
                "valueType": "map<string|string[]>?",
                "optional": true,
                "editable": true
              }
            },
            "flags": 0
          },
          {
            "id": "42173",
            "metadata": {
              "label": "If",
              "description": "Add conditional branch to the integration flow."
            },
            "codedata": {
              "node": "IF",
              "lineRange": {
                "fileName": "while.bal",
                "startLine": {
                  "line": 10,
                  "offset": 12
                },
                "endLine": {
                  "line": 14,
                  "offset": 13
                }
              }
            },
            "returning": false,
            "branches": [
              {
                "label": "Then",
                "kind": "BLOCK",
                "codedata": {
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 10,
                      "offset": 34
                    },
                    "endLine": {
                      "line": 12,
                      "offset": 13
                    }
                  }
                },
                "repeatable": "ONE_OR_MORE",
                "properties": {
                  "condition": {
                    "metadata": {
                      "label": "Condition",
                      "description": "Boolean Condition"
                    },
                    "valueType": "boolean",
                    "value": "(response is json) ",
                    "optional": false,
                    "editable": true
                  }
                },
                "children": [
                  {
                    "id": "43236",
                    "metadata": {
                      "label": "Custom Expression",
                      "description": "Represents a custom Ballerina expression"
                    },
                    "codedata": {
                      "node": "EXPRESSION",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 11,
                          "offset": 16
                        },
                        "endLine": {
                          "line": 11,
                          "offset": 84
                        }
                      }
                    },
                    "returning": false,
                    "properties": {
                      "expression": {
                        "metadata": {
                          "label": "Expression",
                          "description": "Expression"
                        },
                        "valueType": "string",
                        "value": "\"Response received from food service: \" + response.toString()",
                        "optional": false,
                        "editable": true
                      },
                      "variable": {
                        "metadata": {
                          "label": "Variable",
                          "description": "Result Variable"
                        },
                        "valueType": "string|()",
                        "value": "msg",
                        "optional": false,
                        "editable": true
                      }
                    },
                    "flags": 0
                  }
                ]
              },
              {
                "label": "Else",
                "kind": "BLOCK",
                "codedata": {
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 12,
                      "offset": 14
                    },
                    "endLine": {
                      "line": 14,
                      "offset": 13
                    }
                  }
                },
                "repeatable": "ZERO_OR_ONE",
                "children": [
                  {
                    "id": "45226",
                    "metadata": {
                      "label": "Custom Expression",
                      "description": "Represents a custom Ballerina expression"
                    },
                    "codedata": {
                      "node": "EXPRESSION",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 13,
                          "offset": 16
                        },
                        "endLine": {
                          "line": 13,
                          "offset": 90
                        }
                      }
                    },
                    "returning": false,
                    "properties": {
                      "expression": {
                        "metadata": {
                          "label": "Expression",
                          "description": "Expression"
                        },
                        "valueType": "string",
                        "value": "\"Error occurred while invoking food service: \" + response.message()",
                        "optional": false,
                        "editable": true
                      },
                      "variable": {
                        "metadata": {
                          "label": "Variable",
                          "description": "Result Variable"
                        },
                        "valueType": "string|()",
                        "value": "msg",
                        "optional": false,
                        "editable": true
                      }
                    },
                    "flags": 0
                  }
                ]
              }
            ],
            "flags": 0
          },
          {
            "id": "47018",
            "metadata": {
              "label": "Custom Expression",
              "description": "Represents a custom Ballerina expression"
            },
            "codedata": {
              "node": "EXPRESSION",
              "lineRange": {
                "fileName": "while.bal",
                "startLine": {
                  "line": 15,
                  "offset": 12
                },
                "endLine": {
                  "line": 15,
                  "offset": 22
                }
              }
            },
            "returning": false,
            "properties": {
              "expression": {
                "metadata": {
                  "label": "Expression",
                  "description": "Expression"
                },
                "valueType": "int",
                "value": "i + 1",
                "optional": false,
                "editable": true
              },
              "variable": {
                "metadata": {
                  "label": "Variable",
                  "description": "Result Variable"
                },
                "valueType": "int",
                "value": "i",
                "optional": false,
                "editable": true
              }
            },
            "flags": 0
          }
        ]
      }
    ],
    "properties": {
      "condition": {
        "metadata": {
          "label": "Condition",
          "description": "Boolean Condition"
        },
        "valueType": "boolean",
        "value": "i < count ",
        "optional": false,
        "editable": true
      }
    },
    "flags": 0
  },
  "output": [
    {
      "range": {
        "start": {
          "line": 8,
          "character": 8
        },
        "end": {
          "line": 16,
          "character": 9
        }
      },
      "newText": "while i < count {\n    json|http:ClientError response = foodClient->get(\"/food/apples\");\n    if (response is json) {\n        string|() msg = \"Response received from food service: \" + response.toString();\n    }\n    else {\n        string|() msg = \"Error occurred while invoking food service: \" + response.message();\n    }\n    int i = i + 1;\n}"
    }
  ]
}
