/*
 *  Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com)
 *
 *  WSO2 LLC. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    mavenCentral()
}

configurations {
    javaImplementation.extendsFrom implementation
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

dependencies {
    implementation "org.ballerinalang:ballerina-lang:${ballerinaLangVersion}"
    implementation "org.ballerinalang:ballerina-runtime:${ballerinaLangVersion}"
}

def ballerinaSourceDir = "${projectDir}/src/main/ballerina"
def buildBallerinaDir = "${buildDir}/ballerina-src"
def jarName = "mock-0.0.0.jar"
def buildLibsDir = "${buildDir}/libs"

task buildJavaProject(type: Jar) {
    description = 'Builds the Java project and creates a jar'
    group = 'build'

    from sourceSets.main.output
    archiveFileName = jarName
    destinationDirectory = file(buildLibsDir)
}

task copyBallerinaSource(type: Copy) {
    description = 'Copies Ballerina source files to build directory'
    group = 'build'

    from ballerinaSourceDir
    into buildBallerinaDir

    // Exclude Ballerina.toml as we'll handle it separately
    exclude 'Ballerina.toml'
}

task updateBallerinaToml(type: Copy, dependsOn: buildJavaProject) {
    description = 'Updates Ballerina.toml with correct jar path'
    group = 'build'

    from "${ballerinaSourceDir}/Ballerina.toml"
    into buildBallerinaDir

    filter { line ->
        line.replaceAll("path = \"../libs/<jar>\"", "path = \"../libs/${jarName}\"")
    }
}

task balPack(type: Exec, dependsOn: [copyBallerinaSource, updateBallerinaToml]) {
    description = 'Executes bal pack command on the Ballerina project'
    group = 'build'

    workingDir buildBallerinaDir

    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
        commandLine 'cmd', '/c', "bal pack"
    } else {
        commandLine '/bin/sh', '-c', "bal pack"
    }
}

task buildAll(dependsOn: balPack) {
    description = 'Builds the Java project, prepares Ballerina sources, and packs the Ballerina module'
    group = 'build'
}

build.dependsOn buildAll
